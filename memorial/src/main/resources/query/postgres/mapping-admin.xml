<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="admin">

	<resultMap id="bunyangInfoVo" type="com.calvary.admin.vo.BunyangInfoVo">
         <result property="bunyangSeq" column="bunyang_seq"/>
         <result property="requestUserSeq" column="request_user_seq"/>
         <result property="productType" column="product_type"/>
         <result property="graveType" column="grave_type"/>
         <result property="serviceChargeType" column="service_charge_type"/>
         <result property="reqApprovalSeq" column="req_approval_seq"/>
         <result property="contractSeq" column="contract_seq"/>
         <result property="useApprovalSeq" column="use_approval_seq"/>
         <result property="progressStatus" column="progress_status"/>
         <result property="registUserSeq" column="regist_user_seq"/>
         <result property="registDate" column="regist_date"/>
    </resultMap>
    
	<resultMap id="bunyangUserVo" type="com.calvary.admin.vo.BunyangUserVo">
         <result property="bunyangSeq" column="bunyang_seq"/>
         <result property="userId" column="user_id"/>
         <result property="userName" column="user_name"/>
         <result property="birthDate" column="birth_date"/>
         <result property="gender" column="gender"/>
         <result property="email" column="email"/>
         <result property="mobile" column="mobile"/>
         <result property="phone" column="phone"/>
         <result property="postNumber" column="post_number"/>
         <result property="address1" column="address1"/>
         <result property="address2" column="address2"/>
         <result property="refType" column="ref_type"/>
         <result property="relationType" column="relation_type"/>
    </resultMap>
    
    <!-- 분양신청리스트 조회 -->
    <select id="getApplyList" parameterType="map" resultType="map">
    	SELECT
    		t.*
    		,CASE 
        		WHEN use_user_cnt > 1 THEN CONCAT(use_user_name,'(',use_user_relation_name,')',' 외 ',use_user_cnt-1,'명')
          		ELSE  CONCAT(use_user_name,'(',use_user_relation_name,')')
        	END use_user_exp
        	,CASE progress_status
        		WHEN 'N' THEN '신청(미승인)'
        		WHEN 'A' THEN '승인'
        		WHEN 'R' THEN '반려'
        		ELSE progress_status
        	END progress_status_exp
    		,COUNT(*) OVER() total_count
    	FROM
		    (SELECT
			  a.bunyang_seq
			  ,COALESCE(a.progress_status,'') || a.bunyang_seq bunyang_no
			  ,a.product_type
			  ,(SELECT code_name FROM tb_com_code cc WHERE cc.code_seq = a.product_type AND cc.parent_code_seq = 'PRODUCT_TYPE') product_type_name
			  ,a.couple_type_count
			  ,a.single_type_count
			  ,a.service_charge_type
			  ,(SELECT code_name FROM tb_com_code cc WHERE cc.code_seq = a.service_charge_type AND cc.parent_code_seq = 'SERVICE_CHARGE_TYPE') service_charge_type_name
			  ,a.progress_status
			  ,b.user_id apply_user_id
			  ,b.user_name apply_user_name
			  ,b.relation_type apply_user_relation
			  ,c.user_id agent_user_id
			  ,c.user_name agent_user_name
			  ,c.relation_type agent_user_relation
			  ,(SELECT code_name FROM tb_com_code cc WHERE cc.code_seq = c.relation_type AND cc.parent_code_seq = 'USER_RELATION') agent_user_relation_name
			  ,d.user_id use_user_id
			  ,d.user_name use_user_name
			  ,d.relation_type use_user_relation
			  ,(SELECT code_name FROM tb_com_code cc WHERE cc.code_seq = d.relation_type AND cc.parent_code_seq = 'USER_RELATION') use_user_relation_name
			  ,d.cnt use_user_cnt
			  ,a.regist_user_seq
			  ,(SELECT user_name FROM tb_com_user cu WHERE cu.user_id = a.regist_user_seq) regist_user_name
		      ,TO_CHAR(a.regist_date, 'YYYY-MM-DD') AS regist_date
			FROM tb_bunyang_info a INNER JOIN       
			(SELECT
				bunyang_seq
			  	,user_id
				,CASE WHEN user_id IS NULL THEN user_name ELSE (SELECT user_name FROM tb_com_user b WHERE a.user_id = b.user_id) END user_name
			  	,ref_type
				,relation_type
			FROM tb_bunyang_ref_user a
			WHERE ref_type = 'APPLY_USER'
			) b ON a.bunyang_seq = b.bunyang_seq  
			LEFT OUTER JOIN
			(SELECT
				bunyang_seq
			  	,user_id
				,CASE WHEN user_id IS NULL THEN user_name ELSE (SELECT user_name FROM tb_com_user b WHERE a.user_id = b.user_id) END user_name
			  	,ref_type
				,relation_type
			FROM tb_bunyang_ref_user a
			WHERE ref_type = 'AGENT_USER'
			) c ON a.bunyang_seq = c.bunyang_seq
			INNER JOIN
			(SELECT
				*
			FROM
				(SELECT
					bunyang_seq
				  	,user_id
					,user_name
					,relation_type
				  	,rank() over(partition BY bunyang_seq ORDER BY CASE WHEN relation_type = 'ONESELF' THEN 1 ELSE 2 end, user_name) rn
			    	,COUNT(*) over(partition BY bunyang_seq) cnt
				FROM      
					(SELECT 
						 bunyang_seq
					   	,user_id
					   	,CASE WHEN user_id IS NULL THEN user_name ELSE (SELECT user_name FROM tb_com_user b WHERE a.user_id = b.user_id) END user_name
					   	,relation_type 
					FROM tb_bunyang_ref_user a
					WHERE a.ref_type = 'USE_USER'
					) a
			  ) t
			WHERE rn = 1
			) d ON a.bunyang_seq = d.bunyang_seq
			WHERE A.progress_status in ('N', 'A', 'R')
			) t
		WHERE 1=1
		<if test="apply_user_name != null">
		AND apply_user_name like CONCAT('%',#{apply_user_name},'%')
		</if>
		ORDER BY t.bunyang_seq
		LIMIT #{countPerPage} OFFSET (#{pageIndex}-1)*#{countPerPage}
    </select>
    
    <!-- 분양신청리스트 조회 -->
	<select id="getBunyangList" parameterType="map" resultType="map">
		SELECT
    		t.*
    		,COUNT(*) OVER() total_count
    		,CASE 
        		WHEN use_user_cnt > 1 THEN CONCAT(use_user_name,'(',use_user_relation_name,')',' 외 ',use_user_cnt-1,'명')
          		ELSE  CONCAT(use_user_name,'(',use_user_relation_name,')')
        	END use_user_exp
    	FROM
		    (SELECT
			  a.bunyang_seq
			  ,COALESCE(a.progress_status,'') || a.bunyang_seq bunyang_no
			  ,a.product_type
			  ,(SELECT code_name FROM tb_com_code cc WHERE cc.code_seq = a.product_type AND cc.parent_code_seq = 'PRODUCT_TYPE') product_type_name
			  ,a.couple_type_count
			  ,a.single_type_count
			  ,a.service_charge_type
			  ,(SELECT code_name FROM tb_com_code cc WHERE cc.code_seq = a.service_charge_type AND cc.parent_code_seq = 'SERVICE_CHARGE_TYPE') service_charge_type_name
			  ,a.progress_status
			  ,b.user_id apply_user_id
			  ,b.user_name apply_user_name
			  ,b.birth_date apply_user_birth_date
			  ,b.church_officer apply_user_church_officer
			  ,(SELECT code_name FROM tb_com_code cc WHERE cc.code_seq = b.church_officer AND cc.parent_code_seq = 'CHURCH_OFFICER') apply_user_church_officer_name
			  ,b.diocese apply_user_diocese
			  ,b.relation_type apply_user_relation
			  ,c.user_id agent_user_id
			  ,c.user_name agent_user_name
			  ,c.relation_type agent_user_relation
			  ,(SELECT code_name FROM tb_com_code cc WHERE cc.code_seq = c.relation_type AND cc.parent_code_seq = 'USER_RELATION') agent_user_relation_name
			  ,d.user_id use_user_id
			  ,d.user_name use_user_name
			  ,d.relation_type use_user_relation
			  ,(SELECT code_name FROM tb_com_code cc WHERE cc.code_seq = d.relation_type AND cc.parent_code_seq = 'USER_RELATION') use_user_relation_name
			  ,d.cnt use_user_cnt
			  ,a.regist_user_seq
			  ,(SELECT user_name FROM tb_com_user cu WHERE cu.user_id = a.regist_user_seq) regist_user_name
		      ,TO_CHAR(a.regist_date, 'YYYY-MM-DD') AS regist_date
		      ,(COALESCE(a.couple_type_count,0)*2 + COALESCE(a.single_type_count,0)) * 2000000 AS total_price
			  ,CASE WHEN progress_status = 'D' THEN 'Y' ELSE 'N' END AS approval_yn
			  ,(SELECT TO_CHAR(update_date, 'YYYY-MM-DD') FROM tb_bunyang_history bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'A') apply_approval_date
			  ,(SELECT TO_CHAR(update_date, 'YYYY-MM-DD') FROM tb_bunyang_history bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'B') contract_date
			  ,(SELECT TO_CHAR(update_date, 'YYYY-MM-DD') FROM tb_bunyang_history bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'C') full_payment_date
			  ,(SELECT TO_CHAR(update_date, 'YYYY-MM-DD') FROM tb_bunyang_history bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'D') use_approval_date
			FROM tb_bunyang_info a INNER JOIN       
			(SELECT
				bunyang_seq
			  	,user_id
				,CASE WHEN user_id IS NULL THEN user_name ELSE (SELECT user_name FROM tb_com_user b WHERE a.user_id = b.user_id) END user_name
				,CASE WHEN user_id IS NULL THEN birth_date ELSE (SELECT birth_date FROM tb_com_user b WHERE a.user_id = b.user_id) END birth_date
				,CASE WHEN user_id IS NULL THEN NULL ELSE (SELECT church_officer FROM tb_com_user b WHERE a.user_id = b.user_id) END church_officer
				,CASE WHEN user_id IS NULL THEN NULL ELSE (SELECT diocese FROM tb_com_user b WHERE a.user_id = b.user_id) END diocese
			  	,ref_type
				,relation_type
			FROM tb_bunyang_ref_user a
			WHERE ref_type = 'APPLY_USER'
			) b ON a.bunyang_seq = b.bunyang_seq  
			LEFT OUTER JOIN
			(SELECT
				bunyang_seq
			  	,user_id
				,CASE WHEN user_id IS NULL THEN user_name ELSE (SELECT user_name FROM tb_com_user b WHERE a.user_id = b.user_id) END user_name
			  	,ref_type
				,relation_type
			FROM tb_bunyang_ref_user a
			WHERE ref_type = 'AGENT_USER'
			) c ON a.bunyang_seq = c.bunyang_seq
			INNER JOIN
			(SELECT
				*
			FROM
				(SELECT
					bunyang_seq
				  	,user_id
					,user_name
					,relation_type
				  	,rank() over(partition BY bunyang_seq ORDER BY CASE WHEN relation_type = 'ONESELF' THEN 1 ELSE 2 end, user_name) rn
			    	,COUNT(*) over(partition BY bunyang_seq) cnt
				FROM      
					(SELECT 
						 bunyang_seq
					   	,user_id
					   	,CASE WHEN user_id IS NULL THEN user_name ELSE (SELECT user_name FROM tb_com_user b WHERE a.user_id = b.user_id) END user_name
					   	,relation_type 
					FROM tb_bunyang_ref_user a
					WHERE a.ref_type = 'USE_USER'
					) a
			  ) t
			WHERE rn = 1
			) d ON a.bunyang_seq = d.bunyang_seq
			) t
		WHERE 1=1
		<if test="apply_user_name != null">
		AND apply_user_name like CONCAT('%',#{apply_user_name},'%')
		</if>
		ORDER BY t.bunyang_seq
		LIMIT #{countPerPage} OFFSET (#{pageIndex}-1)*#{countPerPage}
	</select>

	<!-- 분양 정보 -->
	<select id="getBunyangInfo" parameterType="String" resultType="map">
		SELECT
			t.*
		FROM
		(SELECT 
			A.bunyang_seq
	       	,A.product_type
	       	,B.user_id as apply_user_id
	       	,B.user_name as apply_user_name
          	,(SELECT code_name FROM tb_com_code cc WHERE cc.code_seq = a.product_type AND cc.parent_code_seq = 'PRODUCT_TYPE') product_type_name
	       	,A.service_charge_type
          	,(SELECT code_name FROM tb_com_code cc WHERE cc.code_seq = a.service_charge_type AND cc.parent_code_seq = 'SERVICE_CHARGE_TYPE') service_charge_type_name
          	,a.couple_type_count
          	,a.single_type_count
          	,a.progress_status
          	,(COALESCE(a.couple_type_count,0)*2 + COALESCE(a.single_type_count,0)) * 2000000 AS total_price
          	,(SELECT COALESCE(SUM(payment_amount),0) FROM tb_bunyang_payment_history ph WHERE ph.bunyang_seq = a.bunyang_seq AND ph.payment_type = 'DOWN_PAYMENT') AS down_payment
            ,(SELECT COALESCE(SUM(payment_amount),0) FROM tb_bunyang_payment_history ph WHERE ph.bunyang_seq = a.bunyang_seq AND ph.payment_type = 'BALANCE_PAYMENT') AS balance_payment
	       	,TO_CHAR(A.regist_date, 'YYYY-MM-DD') AS regist_date
	  	FROM tb_bunyang_info A INNER JOIN       
			(SELECT
				bunyang_seq
			  	,user_id
				,CASE WHEN user_id IS NULL THEN user_name ELSE (SELECT user_name FROM tb_com_user b WHERE a.user_id = b.user_id) END user_name
				,CASE WHEN user_id IS NULL THEN birth_date ELSE (SELECT birth_date FROM tb_com_user b WHERE a.user_id = b.user_id) END birth_date
				,CASE WHEN user_id IS NULL THEN NULL ELSE (SELECT church_officer FROM tb_com_user b WHERE a.user_id = b.user_id) END church_officer
				,CASE WHEN user_id IS NULL THEN NULL ELSE (SELECT diocese FROM tb_com_user b WHERE a.user_id = b.user_id) END diocese
			  	,ref_type
				,relation_type
			FROM tb_bunyang_ref_user a
			WHERE ref_type = 'APPLY_USER'
			) b ON a.bunyang_seq = b.bunyang_seq
	  	WHERE A.bunyang_seq = #{bunyangSeq}
	  	) t
	</select>
	
	<!-- 분양관련 사용자 정보 -->
	<select id="getBunyangRefUserInfo" parameterType="map" resultType="map">
		SELECT 
			A.bunyang_seq,
		    A.ref_type,
		    A.relation_type,
			(SELECT code_name FROM tb_com_code cc WHERE cc.code_seq = a.relation_type AND cc.parent_code_seq = 'USER_RELATION') relation_type_name,
		    A.user_id,
		    COALESCE(A.user_name, b.user_name) AS user_name,
		    COALESCE(A.birth_date, b.birth_date) AS birth_date,
		    COALESCE(A.gender, b.gender) AS gender,
		    COALESCE(A.email, b.email) AS email,
		    COALESCE(A.mobile, b.mobile) AS mobile,
		    COALESCE(A.phone, b.phone) AS phone,
		    COALESCE(A.post_number, b.post_number) AS post_number,
		    COALESCE(A.address1, b.address1) AS address1,
		    COALESCE(A.address2, b.address2) AS address2,
           	B.church_officer,
			(SELECT code_name FROM tb_com_code cc WHERE cc.code_seq = b.church_officer AND cc.parent_code_seq = 'CHURCH_OFFICER') church_officer_name,
			B.diocese,
			A.is_church_person
		FROM tb_bunyang_ref_user A LEFT OUTER JOIN tb_com_user B ON a.user_id = b.user_id
		WHERE A.bunyang_seq = #{bunyangSeq}
    	AND A.ref_type = #{refType}
	</select>
	
	<!-- 분양정보 시퀀스 생성 -->
	<select id="getBunyangInfoSequence" resultType="map">
		SELECT NEXTVAL('seq_bunyang_info')::text AS seq
	</select>
	
	<!-- 분양정보의 신청서,승인서등 관련 파일양식 조회 -->
	<select id="getBunyangFileList" parameterType="String" resultType="map">
		SELECT * FROM tb_sys_file_info WHERE file_seq = (SELECT file_seq_apply FROM tb_bunyang_info a WHERE a.bunyang_seq = #{bunyangSeq}) UNION ALL
		SELECT * FROM tb_sys_file_info WHERE file_seq = (SELECT file_seq_use_user FROM tb_bunyang_info a WHERE a.bunyang_seq = #{bunyangSeq}) UNION ALL
		SELECT * FROM tb_sys_file_info WHERE file_seq = (SELECT file_seq_approval FROM tb_bunyang_info a WHERE a.bunyang_seq = #{bunyangSeq}) UNION ALL
		SELECT * FROM tb_sys_file_info WHERE file_seq = (SELECT file_seq_contract FROM tb_bunyang_info a WHERE a.bunyang_seq = #{bunyangSeq}) UNION ALL
		SELECT * FROM tb_sys_file_info WHERE file_seq = (SELECT file_seq_full_payment FROM tb_bunyang_info a WHERE a.bunyang_seq = #{bunyangSeq}) UNION ALL
		SELECT * FROM tb_sys_file_info WHERE file_seq = (SELECT file_seq_use_approval FROM tb_bunyang_info a WHERE a.bunyang_seq = #{bunyangSeq})
	</select>
	
	<!-- 분양정보 생성 -->
	<insert id="createBunyangInfo" parameterType="map">
		INSERT INTO tb_bunyang_info ( bunyang_seq,product_type,couple_type_count,single_type_count,service_charge_type,req_approval_seq,contract_seq,use_approval_seq,progress_status,regist_user_seq,regist_date )
		VALUES (#{bunyangSeq} , #{productType}, #{coupleTypeCount}, #{singleTypeCount}, #{serviceChargeType}, #{reqApprovalSeq}, #{contractSeq}, #{useApprovalSeq}, #{progressStatus}, #{registUserSeq}, CURRENT_TIMESTAMP )
	</insert>
	
	<!-- 분양 관련 인명정보 생성 -->
	<insert id="createBunyangRefUserInfo" parameterType="map">
		INSERT INTO tb_bunyang_ref_user ( bunyang_seq,ref_type,relation_type,user_id,user_name,birth_date,gender,email,mobile,phone,post_number,address1,address2,is_church_person )
		VALUES ( #{bunyangSeq}, #{refType}, #{relationType}, #{userId}, #{userName}, #{birthDate}, #{gender}, #{email}, #{mobile}, #{phone}, #{postNumber}, #{address1}, #{address2}, #{isChurchPerson})
	</insert>
	
	<update id="updateBunyangFileSeq">
		UPDATE tb_bunyang_info a
			<set>
				<if test="file_seq_apply != null">file_seq_apply=#{file_seq_apply},</if>
				<if test="file_seq_use_user != null">file_seq_use_user=#{file_seq_use_user},</if>
				<if test="file_seq_approval != null">file_seq_approval=#{file_seq_approval},</if>
				<if test="file_seq_contract != null">file_seq_contract=#{file_seq_contract},</if>
				<if test="file_seq_full_payment != null">file_seq_full_payment=#{file_seq_full_payment},</if>
				<if test="file_seq_use_approval != null">file_seq_use_approval=#{file_seq_use_approval}</if>
			</set> 
		WHERE a.bunyang_seq = #{bunyangSeq}
	</update>
	
	<!-- 분양정보 진행상태 업데이트 -->
	<update id="updateBunyangProgressStatus">
		UPDATE tb_bunyang_info a
			SET progress_status = #{progressStatus}
		WHERE a.bunyang_seq = #{bunyangSeq}
	</update>
	
	<!-- 분양상태변경 이력 생성 -->
	<insert id="createBunyangHistory" parameterType="map">
		INSERT INTO tb_bunyang_history ( bunyang_seq,progress_status,update_user_seq,update_date,remarks )
		VALUES ( #{bunyangSeq}, #{progressStatus}, #{userId}, CURRENT_TIMESTAMP, #{remarks})
	</insert>

</mapper>