<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="use">

    <!-- 추모동산 사용현황 리스트 조회 -->
    <select id="getGraveUseList" parameterType="map" resultType="map">
    	SELECT
			section_seq
		    ,row_seq
		    ,col_seq
		    ,grave_type
		    ,bunyang_seq
		    ,use_user_seq1
		    ,use_user_seq2
		    ,assign_status
		    ,(SELECT MAX(col_seq) FROM TB_BUNYANG_GRAVE_ASSIGN t WHERE a.section_seq = t.SECTION_SEQ) max_col_cnt
		FROM TB_BUNYANG_GRAVE_ASSIGN a
		ORDER BY section_seq, row_seq, col_seq
    </select>
    
    <!-- 특정 구역에 배정된 정보 조회 -->
    <select id="getGraveAssignInfo" parameterType="map" resultType="map">
    	SELECT
	  		b.bunyang_seq
			,a.section_seq
		    ,a.row_seq
		    ,a.col_seq
		    ,a.grave_type
            ,a.assign_status
            ,COALESCE(c.user_name, (SELECT user_name FROM TB_COM_USER cu WHERE cu.user_id = c.user_id)) AS apply_user_name
		    ,d.user_seq
            ,d.user_id
            ,d.relation_type
            ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = d.relation_type AND cc.parent_code_seq = 'USER_RELATION') relation_type_name
            ,COALESCE(d.user_name, e.user_name) AS user_name
		    ,COALESCE(d.birth_date, e.birth_date) AS birth_date
		    ,COALESCE(d.gender, e.gender) AS gender
		    ,COALESCE(d.email, e.email) AS email
		    ,COALESCE(d.mobile, e.mobile) AS mobile
		    ,COALESCE(d.phone, e.phone) AS phone
		    ,COALESCE(d.post_number, e.post_number) AS post_number
		    ,COALESCE(d.address1, e.address1) AS address1
		    ,COALESCE(d.address2, e.address2) AS address2
		FROM TB_BUNYANG_GRAVE_ASSIGN a 
		LEFT OUTER JOIN TB_BUNYANG_INFO b ON a.bunyang_seq = b.bunyang_seq
		LEFT OUTER JOIN TB_BUNYANG_REF_USER c ON a.bunyang_seq = c.bunyang_seq AND c.ref_type = 'APPLY_USER'
		LEFT OUTER JOIN TB_BUNYANG_REF_USER d ON d.ref_type = 'USE_USER' and a.bunyang_seq = d.bunyang_seq and (a.use_user_seq1 = d.user_seq or a.use_user_seq2 = d.user_seq)
        LEFT OUTER JOIN TB_COM_USER e ON d.user_id = e.user_id
		WHERE a.section_seq = #{sectionSeq}
		AND a.row_seq = #{rowSeq}
		AND a.col_seq = #{colSeq}
		ORDER BY section_seq, row_seq, col_seq
    </select>
    
    <!-- 동산 사용신청 리스트 조회 -->
    <select id="getUseApplyList" parameterType="map" resultType="map">
    	SELECT
    		SQL_CALC_FOUND_ROWS
    		t.*
    		,CASE 
        		WHEN use_user_cnt > 1 THEN CONCAT(use_user_name,'(',use_user_relation_name,')',' 외 ',use_user_cnt-1,'명')
          		ELSE  CONCAT(use_user_name,'(',use_user_relation_name,')')
        	END use_user_exp
    	FROM
		    (SELECT
			  a.bunyang_seq
			  ,a.bunyang_no
			  ,a.product_type
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = a.product_type AND cc.parent_code_seq = 'PRODUCT_TYPE') product_type_name
			  ,a.couple_type_count
			  ,a.single_type_count
			  ,a.service_charge_type
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = a.service_charge_type AND cc.parent_code_seq = 'SERVICE_CHARGE_TYPE') service_charge_type_name
			  ,a.progress_status
			  ,b.user_id apply_user_id
			  ,b.user_name apply_user_name
			  ,b.relation_type apply_user_relation
			  ,c.user_id agent_user_id
			  ,c.user_name agent_user_name
			  ,c.relation_type agent_user_relation
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = c.relation_type AND cc.parent_code_seq = 'USER_RELATION') agent_user_relation_name
			  ,d.user_id use_user_id
			  ,d.user_name use_user_name
			  ,d.relation_type use_user_relation
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = d.relation_type AND cc.parent_code_seq = 'USER_RELATION') use_user_relation_name
			  ,d.cnt use_user_cnt
			  ,a.regist_user_id
			  ,(SELECT user_name FROM TB_COM_USER cu WHERE cu.user_id = a.regist_user_id) regist_user_name
		      ,DATE_FORMAT(a.regist_date, '%Y-%m-%d') AS regist_date
		      ,(COALESCE(a.couple_type_count,0)*2 + COALESCE(a.single_type_count,0)) * COALESCE((select code_value from TB_COM_CODE where parent_code_seq = 'BUNYANG_TIMES' and code_seq = a.bunyang_times), a.price_per_count) AS total_price
			  ,CASE WHEN progress_status = 'D' THEN 'Y' ELSE 'N' END AS approval_yn
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'B') contract_date
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'C') full_payment_date
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'D') use_approval_date
			FROM TB_BUNYANG_INFO a INNER JOIN       
			(SELECT
				bunyang_seq
			  	,user_id
				,user_name
			  	,ref_type
				,relation_type
			FROM TB_BUNYANG_REF_USER a
			WHERE ref_type = 'APPLY_USER'
			) b ON a.bunyang_seq = b.bunyang_seq  
			LEFT OUTER JOIN
			(SELECT
				bunyang_seq
			  	,user_id
				,user_name
			  	,ref_type
				,relation_type
			FROM TB_BUNYANG_REF_USER a
			WHERE ref_type = 'AGENT_USER'
			) c ON a.bunyang_seq = c.bunyang_seq
			INNER JOIN
			(SELECT
				*
				,(SELECT COUNT(*) FROM TB_BUNYANG_REF_USER RU WHERE RU.bunyang_seq = t.bunyang_seq and RU.ref_type = 'USE_USER') cnt
			FROM
				(SELECT
					bunyang_seq
				  	,user_id
					,user_name
					,relation_type
					,CASE WHEN @vbunyang_seq = a.bunyang_seq THEN @rownum:=@rownum+1 ELSE @rownum:=1 END rn
                    ,(@vbunyang_seq := a.bunyang_seq) vbunyang_seq
				FROM      
					(SELECT 
						 bunyang_seq
					   	,user_id
					   	,user_name
					   	,relation_type 
					FROM TB_BUNYANG_REF_USER a
					WHERE a.ref_type = 'USE_USER'
					) a, (SELECT @vbunyang_seq:='', @rownum:=0 FROM DUAL) b
				ORDER BY bunyang_seq, CASE WHEN relation_type = 'ONESELF' THEN 1 ELSE 2 end, user_name
			  ) t
			  WHERE rn = 1
			) d ON a.bunyang_seq = d.bunyang_seq
			WHERE a.progress_status in ('D')
			) t
		WHERE 1=1
		<if test="apply_user_name != null">
		AND apply_user_name like CONCAT('%',#{apply_user_name},'%')
		</if>
		ORDER BY t.bunyang_seq
		<if test="start != null">
		LIMIT #{start}, #{count}
		</if>
    </select>
    
    <!-- 사용자리스트 조회 -->
    <select id="getUseUserList" parameterType="map" resultType="map">
    	SELECT 
			 a.bunyang_seq
		   	,a.user_id
		   	,COALESCE(a.user_name, b.user_name) AS user_name
		   	,COALESCE(a.birth_date, b.birth_date) AS birth_date
		   	,COALESCE(a.mobile, b.mobile) AS mobile
		   	,COALESCE(a.post_number, b.post_number) AS post_number
		   	,COALESCE(a.address1, b.address1) AS address1
		   	,COALESCE(a.address2, b.address2) AS address2
		   	,relation_type
		   	,(SELECT code_name FROM TB_COM_CODE t WHERE t.parent_code_seq = 'USER_RELATION' and t.code_seq = a.relation_type) as relation_type_name
		   	,(SELECT COUNT(1) FROM TB_BUNYANG_GRAVE_ASSIGN t WHERE t.bunyang_seq = a.bunyang_seq AND (t.use_user_seq1 = a.user_seq or t.use_user_seq2 = a.user_seq)) assign_yn
		   	,a.user_seq
		   	,a.couple_seq
		FROM TB_BUNYANG_REF_USER a LEFT OUTER JOIN TB_COM_USER b ON a.user_id = b.user_id
		WHERE a.ref_type = 'USE_USER'
		AND a.bunyang_seq = #{bunyangSeq}
		ORDER BY a.user_seq
    </select>
    
    <!-- 사용가능한 동산 정보 조회 -->
    <select id="getAvailableGraveInfo" parameterType="map" resultType="map">
    	SELECT
			section_seq, row_seq, col_seq
		FROM
		(SELECT
			section_seq, row_seq, count(1) cnt, min(col_seq) col_seq
		FROM TB_BUNYANG_GRAVE_ASSIGN a
		WHERE grave_type = #{graveType} AND assign_status = 'AVAILABLE'
		GROUP BY section_seq, row_seq
		) t
		WHERE cnt >= #{cnt}
		ORDER BY section_seq, row_seq, col_seq
		LIMIT 1
    </select>
    
    <!-- 예약된 가족형 자리중에서 사용가능한 동산 정보 조회 -->
    <select id="getAvailableFamilyGraveInfo" parameterType="map" resultType="map">
    	SELECT
    		section_seq
    		,row_seq
			,min(col_seq) col_seq
		FROM TB_BUNYANG_GRAVE_ASSIGN a
		WHERE a.bunyang_seq = #{bunyangSeq}
		AND grave_type = #{graveType} 
		AND assign_status = 'RESERVED'
		GROUP BY section_seq, row_seq
    </select>
    
    <!-- 부부형 2기중에서 현재 사용중인 사용자 조회 -->
    <select id="getUsingCoupleUserSeq" parameterType="map" resultType="map">
    	SELECT 
			a.use_user_seq1
		FROM TB_BUNYANG_GRAVE_ASSIGN a INNER JOIN TB_BUNYANG_REF_USER b 
		ON a.bunyang_seq = b.bunyang_seq AND a.use_user_seq1 = b.user_seq AND b.couple_seq = #{coupleSeq} AND b.ref_type = 'USE_USER'
		WHERE a.bunyang_seq = #{bunyangSeq} 
		LIMIT 1
    </select>
    
    <!-- 분양신청번호에 해당하는 사용정보 조회 -->
    <select id="getBunyangSeqGraveInfo" parameterType="map" resultType="map">
    	SELECT 
			section_seq
			,row_seq
			,col_seq
			,bunyang_seq
			,use_user_seq1
			,use_user_seq2
			,assign_status
			,grave_type
		FROM TB_BUNYANG_GRAVE_ASSIGN a
		WHERE a.bunyang_seq = #{bunyangSeq}
		ORDER BY section_seq, row_seq, col_seq
    </select>
    
    <!-- 동산 배정 -->
    <update id="updateGrave" parameterType="map">
    	UPDATE TB_BUNYANG_GRAVE_ASSIGN a
			SET bunyang_seq = #{bunyangSeq},
			use_user_seq1 = #{useUserSeq1},
			use_user_seq2 = #{useUserSeq2},
			assign_status = #{assignStatus}
		WHERE a.section_seq = #{sectionSeq} 
		AND a.row_seq = #{rowSeq}
		AND a.col_seq = #{colSeq}
    </update>
    
    <!-- 동산 배정(부부형 두번째 자리 업데이트) -->
    <update id="updateCoupleGrave" parameterType="map">
    	UPDATE TB_BUNYANG_GRAVE_ASSIGN a
			SET use_user_seq2 = #{useUserSeq2}
		WHERE a.bunyang_seq = #{bunyangSeq} AND a.use_user_seq1 = #{useUserSeq1}
    </update>
    
</mapper>