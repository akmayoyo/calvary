<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cancel">

	<!-- 해약관리 대상 조회 -->
	<select id="getCancelList" parameterType="map" resultType="map">
		SELECT
			SQL_CALC_FOUND_ROWS
    		t.*
    		,CASE 
        		WHEN use_user_cnt > 1 THEN CONCAT(use_user_name,'(',use_user_relation_name,')',' 외 ',use_user_cnt-1,'명')
          		ELSE  CONCAT(use_user_name,'(',use_user_relation_name,')')
        	END use_user_exp
    	FROM
		    (SELECT
			  a.bunyang_seq
			  ,a.bunyang_no
			  ,a.product_type
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = a.product_type AND cc.parent_code_seq = 'PRODUCT_TYPE') product_type_name
			  ,a.couple_type_count
			  ,a.single_type_count
			  ,a.service_charge_type
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = a.service_charge_type AND cc.parent_code_seq = 'SERVICE_CHARGE_TYPE') service_charge_type_name
			  ,a.progress_status
			  ,b.user_id apply_user_id
			  ,b.user_name apply_user_name
			  ,b.birth_date apply_user_birth_date
			  ,b.church_officer apply_user_church_officer
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = b.church_officer AND cc.parent_code_seq = 'CHURCH_OFFICER') apply_user_church_officer_name
			  ,b.diocese apply_user_diocese
			  ,b.relation_type apply_user_relation
			  ,c.user_id agent_user_id
			  ,c.user_name agent_user_name
			  ,c.relation_type agent_user_relation
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = c.relation_type AND cc.parent_code_seq = 'USER_RELATION') agent_user_relation_name
			  ,d.user_id use_user_id
			  ,d.user_name use_user_name
			  ,d.relation_type use_user_relation
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = d.relation_type AND cc.parent_code_seq = 'USER_RELATION') use_user_relation_name
			  ,d.cnt use_user_cnt
			  ,a.regist_user_id
			  ,(SELECT user_name FROM TB_COM_USER cu WHERE cu.user_id = a.regist_user_id) regist_user_name
		      ,DATE_FORMAT(a.regist_date, '%Y-%m-%d') AS regist_date
		      ,(COALESCE(a.couple_type_count,0)*2 + COALESCE(a.single_type_count,0)) * COALESCE((select code_value from TB_COM_CODE where parent_code_seq = 'BUNYANG_TIMES' and code_seq = a.bunyang_times), a.price_per_count) AS total_price
			  ,CASE WHEN progress_status = 'D' THEN 'Y' ELSE 'N' END AS approval_yn
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'A') apply_approval_date
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'B') contract_date
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'C') full_payment_date
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'D') use_approval_date
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'E') cancel_approval_date
			FROM TB_BUNYANG_INFO a INNER JOIN       
			(SELECT
				bunyang_seq
			  	,user_id
				,CASE WHEN user_id IS NULL THEN user_name ELSE (SELECT user_name FROM TB_COM_USER b WHERE a.user_id = b.user_id) END user_name
				,CASE WHEN user_id IS NULL THEN birth_date ELSE (SELECT birth_date FROM TB_COM_USER b WHERE a.user_id = b.user_id) END birth_date
				,CASE WHEN user_id IS NULL THEN NULL ELSE (SELECT church_officer FROM TB_COM_USER b WHERE a.user_id = b.user_id) END church_officer
				,CASE WHEN user_id IS NULL THEN NULL ELSE (SELECT diocese FROM TB_COM_USER b WHERE a.user_id = b.user_id) END diocese
			  	,ref_type
				,relation_type
			FROM TB_BUNYANG_REF_USER a
			WHERE ref_type = 'APPLY_USER'
			) b ON a.bunyang_seq = b.bunyang_seq  
			LEFT OUTER JOIN
			(SELECT
				bunyang_seq
			  	,user_id
				,CASE WHEN user_id IS NULL THEN user_name ELSE (SELECT user_name FROM TB_COM_USER b WHERE a.user_id = b.user_id) END user_name
			  	,ref_type
				,relation_type
			FROM TB_BUNYANG_REF_USER a
			WHERE ref_type = 'AGENT_USER'
			) c ON a.bunyang_seq = c.bunyang_seq
			INNER JOIN
			(SELECT
				*
				,(SELECT COUNT(*) FROM TB_BUNYANG_REF_USER RU WHERE RU.bunyang_seq = t.bunyang_seq and RU.ref_type = 'USE_USER') cnt
			FROM
				(SELECT
					bunyang_seq
				  	,user_id
					,user_name
					,relation_type
					,CASE WHEN @vbunyang_seq = a.bunyang_seq THEN @rownum:=@rownum+1 ELSE @rownum:=1 END rn
                    ,(@vbunyang_seq := a.bunyang_seq) vbunyang_seq
				FROM      
					(SELECT 
						 bunyang_seq
					   	,user_id
					   	,CASE WHEN user_id IS NULL THEN user_name ELSE (SELECT user_name FROM TB_COM_USER b WHERE a.user_id = b.user_id) END user_name
					   	,relation_type 
					FROM TB_BUNYANG_REF_USER a
					WHERE a.ref_type = 'USE_USER'
					) a, (SELECT @vbunyang_seq:='', @rownum:=0 FROM DUAL) b
				ORDER BY bunyang_seq, CASE WHEN relation_type = 'ONESELF' THEN 1 ELSE 2 end, user_name
			  ) t
			  WHERE rn = 1
			) d ON a.bunyang_seq = d.bunyang_seq
			WHERE a.progress_status in ('B','C','D','E')
			) t
		WHERE 1=1
		<if test="apply_user_name != null">
		AND apply_user_name like CONCAT('%',#{apply_user_name},'%')
		</if>
		ORDER BY t.bunyang_seq
		<if test="start != null">
		LIMIT #{start}, #{count}
		</if>
	</select>
	
	<!-- 해약 반환금 내역 -->
	<insert id="insertCancelPayment" parameterType="map">
		INSERT INTO TB_BUNYANG_PAYMENT_HISTORY 
		(bunyang_seq, payment_type, payment_amount, payment_method, payment_date, create_user, create_date) 
		values (#{bunyangSeq}, #{paymentType}, #{paymentAmount}, #{paymentMethod}, STR_TO_DATE(REGEXP_REPLACE(#{paymentDate}, '[^0-9]+', ''), '%Y%m%d'), #{createUser}, CURRENT_TIMESTAMP)
	</insert>
	
	<!-- 해약 내용 업데이트 -->
	<update id="updateCancel" parameterType="map">
		UPDATE TB_BUNYANG_INFO a
		SET 
			cancel_reason = #{cancelReason},
			cancel_bank = #{cancelBank},
			cancel_account = #{cancelAccount},
			cancel_account_holder = #{cancelAccountHolder},
			cancel_deposit_plan_date = STR_TO_DATE(#{cancelDepositPlanDate}, '%Y%m%d')
		WHERE a.bunyang_seq = #{bunyangSeq}
	</update>
    
</mapper>