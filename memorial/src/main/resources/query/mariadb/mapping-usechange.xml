<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="usechange">


    <!-- 사용계약 리스트 조회 -->
    <select id="getUseChangeList" parameterType="map" resultType="map">
    	SELECT
    		SQL_CALC_FOUND_ROWS
    		t.*
    		,CASE 
        		WHEN use_user_cnt > 1 THEN CONCAT(use_user_name,'(',use_user_relation_name,')',' 외 ',use_user_cnt-1,'명')
          		ELSE  CONCAT(use_user_name,'(',use_user_relation_name,')')
        	END use_user_exp
        	,CASE 
        		WHEN progress_status = 'C' THEN '사용 미승인'
        		WHEN progress_status = 'D' THEN '사용 승인'
        	END progress_status_exp
    	FROM
		    (SELECT
			  a.bunyang_seq
			  ,a.bunyang_no
			  ,a.product_type
			  ,a.bunyang_times
			  ,CASE WHEN a.progress_status = 'C' THEN 1 ELSE 2 END as display_order
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = a.product_type AND cc.parent_code_seq = 'PRODUCT_TYPE') product_type_name
			  ,a.couple_type_count
			  ,a.single_type_count
			  ,a.service_charge_type
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = a.service_charge_type AND cc.parent_code_seq = 'SERVICE_CHARGE_TYPE') service_charge_type_name
			  ,a.progress_status
			  ,b.user_id apply_user_id
			  ,b.user_name apply_user_name
			  ,b.relation_type apply_user_relation
			  ,b.mobile apply_user_mobile
			  ,c.user_id agent_user_id
			  ,c.user_name agent_user_name
			  ,c.relation_type agent_user_relation
			  ,(SELECT code_name FROM TB_COM_RELATION_CODE cc WHERE cc.code_seq = c.relation_type) agent_user_relation_name
			  ,d.user_id use_user_id
			  ,d.user_name use_user_name
			  ,d.relation_type use_user_relation
			  ,(SELECT code_name FROM TB_COM_RELATION_CODE cc WHERE cc.code_seq = d.relation_type) use_user_relation_name
			  ,d.cnt use_user_cnt
			  ,d.approval_user_cnt
			  ,a.regist_user_id
			  ,(SELECT user_name FROM TB_COM_USER cu WHERE cu.user_id = a.regist_user_id) regist_user_name
		      ,DATE_FORMAT(a.regist_date, '%Y-%m-%d') AS regist_date
		      ,(COALESCE(a.couple_type_count,0)*2 + COALESCE(a.single_type_count,0)) * COALESCE((select code_value from TB_COM_CODE where parent_code_seq = 'BUNYANG_TIMES' and code_seq = a.bunyang_times), a.price_per_count) AS total_price
			  ,CASE WHEN progress_status = 'D' THEN 'Y' ELSE 'N' END AS approval_yn
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'B' order by bh.update_date desc limit 1) contract_date
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'C' order by bh.update_date desc limit 1) full_payment_date
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'D' order by bh.update_date desc limit 1) use_approval_date
			FROM TB_BUNYANG_INFO a INNER JOIN       
			(SELECT
				bunyang_seq
			  	,user_id
				,user_name
			  	,ref_type
				,relation_type
				,mobile
			FROM TB_BUNYANG_REF_USER a
			WHERE ref_type = 'APPLY_USER'
			) b ON a.bunyang_seq = b.bunyang_seq  
			LEFT OUTER JOIN
			(SELECT
				bunyang_seq
			  	,user_id
				,user_name
			  	,ref_type
				,relation_type
			FROM TB_BUNYANG_REF_USER a
			WHERE ref_type = 'AGENT_USER'
			) c ON a.bunyang_seq = c.bunyang_seq
			INNER JOIN
			(SELECT
				*
				,(SELECT COUNT(*) FROM TB_BUNYANG_REF_USER RU WHERE RU.bunyang_seq = t.bunyang_seq and RU.ref_type = 'USE_USER') cnt
				,(SELECT COUNT(*) FROM TB_BUNYANG_REF_USER RU WHERE RU.bunyang_seq = t.bunyang_seq and RU.ref_type = 'USE_USER' and approval_no is not null) approval_user_cnt
			FROM
				(SELECT
					bunyang_seq
				  	,user_id
					,user_name
					,relation_type
					,CASE WHEN @vbunyang_seq = a.bunyang_seq THEN @rownum:=@rownum+1 ELSE @rownum:=1 END rn
                    ,(@vbunyang_seq := a.bunyang_seq) vbunyang_seq
				FROM      
					(SELECT 
						 bunyang_seq
					   	,user_id
					   	,user_name
					   	,relation_type 
					FROM TB_BUNYANG_REF_USER a
					WHERE a.ref_type = 'USE_USER'
					) a, (SELECT @vbunyang_seq:='', @rownum:=0 FROM DUAL) b
				ORDER BY bunyang_seq, CASE WHEN relation_type = 'ONESELF' THEN 1 ELSE 2 end, user_name
			  ) t
			  WHERE rn = 1
			) d ON a.bunyang_seq = d.bunyang_seq
			WHERE a.progress_status in ('C', 'D')
			) t
		WHERE 1=1
		AND approval_user_cnt > 0
		<if test="apply_user_name != null">
		AND apply_user_name like CONCAT('%',#{apply_user_name},'%')
		</if>
		<if test="bunyangTimes != null and bunyangTimes > 0">
		AND bunyang_times = #{bunyangTimes}
		</if>
		<if test="progressStatus != null and progressStatus != ''">
		AND progress_status = #{progressStatus}
		</if>
		ORDER BY t.display_order, t.bunyang_no
		<if test="start != null">
		LIMIT #{start}, #{count}
		</if>
    </select>
    
    <!-- 계약승계 이력생성 -->
	<insert id="insertSucceedChangeHistory" parameterType="map">
		insert into TB_BUNYANG_REF_USER_CHANGE_HISTORY( BUNYANG_SEQ,REF_TYPE,RELATION_TYPE,USER_ID,USER_NAME,BIRTH_DATE,GENDER,EMAIL,MOBILE,PHONE,POST_NUMBER,ADDRESS1,ADDRESS2,IS_CHURCH_PERSON,IS_AGENT,USER_SEQ,COUPLE_SEQ,CHURCH_OFFICER,DIOCESE,IS_MOVE,IS_MAINT_CHARGER,APPROVAL_NO,APPROVAL_DATE,APPROVAL_ASSIGN_DATE,APPROVAL_FILE_SEQ,CHANGE_TYPE,CHANGE_REASON,REMARKS,CHANGE_TIME )
		select 
			BUNYANG_SEQ,REF_TYPE,RELATION_TYPE,USER_ID,USER_NAME,BIRTH_DATE,GENDER,EMAIL,MOBILE,PHONE,POST_NUMBER,ADDRESS1,ADDRESS2,IS_CHURCH_PERSON,IS_AGENT,USER_SEQ,COUPLE_SEQ,CHURCH_OFFICER,DIOCESE,IS_MOVE,IS_MAINT_CHARGER,APPROVAL_NO,APPROVAL_DATE,APPROVAL_ASSIGN_DATE,APPROVAL_FILE_SEQ,'SUCCEED',#{changeReason},#{remarks},CURRENT_TIMESTAMP 
		FROM TB_BUNYANG_REF_USER 
		where bunyang_seq = #{bunyangSeq} and ref_type = 'APPLY_USER'
	</insert>
	
    <!-- 사용자 정보 변경 이력생성 -->
	<insert id="insertRefUserChangeHistory" parameterType="map">
		insert into TB_BUNYANG_REF_USER_CHANGE_HISTORY( BUNYANG_SEQ,REF_TYPE,RELATION_TYPE,USER_ID,USER_NAME,BIRTH_DATE,GENDER,EMAIL,MOBILE,PHONE,POST_NUMBER,ADDRESS1,ADDRESS2,IS_CHURCH_PERSON,IS_AGENT,USER_SEQ,COUPLE_SEQ,CHURCH_OFFICER,DIOCESE,IS_MOVE,IS_MAINT_CHARGER,APPROVAL_NO,APPROVAL_DATE,APPROVAL_ASSIGN_DATE,APPROVAL_FILE_SEQ,CHANGE_TYPE,CHANGE_TIME )
		select 
			BUNYANG_SEQ,REF_TYPE,RELATION_TYPE,USER_ID,USER_NAME,BIRTH_DATE,GENDER,EMAIL,MOBILE,PHONE,POST_NUMBER,ADDRESS1,ADDRESS2,IS_CHURCH_PERSON,IS_AGENT,USER_SEQ,COUPLE_SEQ,CHURCH_OFFICER,DIOCESE,IS_MOVE,IS_MAINT_CHARGER,APPROVAL_NO,APPROVAL_DATE,APPROVAL_ASSIGN_DATE,APPROVAL_FILE_SEQ,'CHANGE_INFO',CURRENT_TIMESTAMP 
		FROM TB_BUNYANG_REF_USER 
		where bunyang_seq = #{bunyangSeq} and user_id = #{userId}
		AND ref_type = #{refType}
	</insert>
	
    <!-- 관리비 납부자 변경 이력생성 -->
	<insert id="insertServiceChargerChangeHistory" parameterType="map">
		insert into TB_BUNYANG_INFO_CHANGE_HISTORY( BUNYANG_SEQ,PRODUCT_TYPE,COUPLE_TYPE_COUNT,SINGLE_TYPE_COUNT,SERVICE_CHARGE_TYPE,PROGRESS_STATUS,REGIST_USER_ID,REGIST_DATE,FILE_SEQ_APPLY,FILE_SEQ_USE_USER,FILE_SEQ_APPROVAL,FILE_SEQ_CONTRACT,FILE_SEQ_FULL_PAYMENT,FILE_SEQ_USE_APPROVAL,FILE_SEQ_CANCEL,FILE_SEQ_REJECT,CANCEL_REASON,CANCEL_BANK,CANCEL_ACCOUNT,CANCEL_ACCOUNT_HOLDER,CANCEL_DEPOSIT_PLAN_DATE,CANCEL_DEPOSIT_CONFIRM_DATE,BUNYANG_TIMES,BUNYANG_NO,CANCEL_YN,PRICE_PER_COUNT,CHANGE_TYPE,CHANGE_TIME )
		select 
			BUNYANG_SEQ,PRODUCT_TYPE,COUPLE_TYPE_COUNT,SINGLE_TYPE_COUNT,SERVICE_CHARGE_TYPE,PROGRESS_STATUS,REGIST_USER_ID,REGIST_DATE,FILE_SEQ_APPLY,FILE_SEQ_USE_USER,FILE_SEQ_APPROVAL,FILE_SEQ_CONTRACT,FILE_SEQ_FULL_PAYMENT,FILE_SEQ_USE_APPROVAL,FILE_SEQ_CANCEL,FILE_SEQ_REJECT,CANCEL_REASON,CANCEL_BANK,CANCEL_ACCOUNT,CANCEL_ACCOUNT_HOLDER,CANCEL_DEPOSIT_PLAN_DATE,CANCEL_DEPOSIT_CONFIRM_DATE,BUNYANG_TIMES,BUNYANG_NO,CANCEL_YN,PRICE_PER_COUNT,'CHANGE_SERVICE_CHARGE',CURRENT_TIMESTAMP 
		FROM TB_BUNYANG_INFO 
		where bunyang_seq = #{bunyangSeq}
	</insert>
    
    <!-- 계약자 정보를 승계신청자 정보로 변경 -->
	<update id="updateSucceedContractor" parameterType="map">
		UPDATE TB_BUNYANG_REF_USER
		SET relation_type = #{relationType}, user_name = #{userName}
		, birth_date = #{birthDate}, gender = #{gender}
		, email = #{email}, mobile = #{mobile}
		, phone = #{phone}, post_number = #{postNumber}
		, address1 = #{address1}, address2 = #{address2}
		, church_officer = #{churchOfficer}
		, diocese = #{diocese} 
		WHERE bunyang_seq = #{bunyangSeq}
		AND ref_type = 'APPLY_USER'
	</update>
	
    <!-- 사용자 정보 변경 -->
	<update id="updateRefUserInfo" parameterType="map">
		UPDATE TB_BUNYANG_REF_USER
		SET email = #{email}, mobile = #{mobile}
		, phone = #{phone}, post_number = #{postNumber}
		, address1 = #{address1}, address2 = #{address2} 
		WHERE bunyang_seq = #{bunyangSeq} and user_id = #{userId}
		AND ref_type = #{refType}
	</update>
	
	<!-- 관리비 납부자 변경 -->
	<update id="updateServiceChargeType" parameterType="map">
		UPDATE TB_BUNYANG_INFO
		SET service_charge_type = #{serviceChargeType} 
		WHERE bunyang_seq = #{bunyangSeq}
	</update>
	
	<!-- 관리비 납부자 변경 -->
	<update id="updateMaintCharger" parameterType="map">
		UPDATE TB_BUNYANG_REF_USER
		SET is_maint_charger = CASE WHEN user_id = #{maintCharger} THEN 'Y' ELSE 'N' END
		WHERE bunyang_seq = #{bunyangSeq} AND ref_type = 'USE_USER'
	</update>
	
	<!-- 사용(봉안)자 해약 정보 생성 -->
	<insert id="insertCancelInfo" parameterType="map">
	insert into TB_BUNYANG_CANCEL_INFO( CANCEL_SEQ,CANCEL_REASON,CANCEL_BANK,CANCEL_ACCOUNT,CANCEL_ACCOUNT_HOLDER,CANCEL_DEPOSIT_PLAN_DATE,CANCEL_TYPE, SURRENDER_VALUE, PENALTY_VALUE )
	values(#{cancelSeq} , #{cancelReason}, #{cancelBank}, #{cancelAccount}, #{cancelAccountHolder}, #{cancelDepositPlanDate}, #{cancelType}, #{surrenderValue}, #{penaltyValue})
	</insert>
	
	<!-- 사용자 cancel_seq 업데이트 -->
	<update id="updateUseUserCancelSeq" parameterType="map">
		UPDATE TB_BUNYANG_REF_USER
		SET cancel_seq = #{cancelSeq}
		WHERE bunyang_seq = #{bunyangSeq} AND ref_type = 'USE_USER'
		AND user_id = #{userId}
	</update>
	
	<!-- 사용자 해약시 배정된 동산정보가 있을 경우 삭제해줌 -->
	<update id="cancelGraveAssign" parameterType="map">
		UPDATE TB_BUNYANG_GRAVE_ASSIGN
		SET ASSIGN_STATUS = 'AVAILABLE', BUNYANG_SEQ = NULL, USE_USER_SEQ1 = NULL, USE_USER_SEQ2 = NULL
		WHERE BUNYANG_SEQ = #{bunyangSeq} AND (USE_USER_SEQ1 = #{userSeq} OR USE_USER_SEQ2 = #{userSeq})
	</update>

</mapper>