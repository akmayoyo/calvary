<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="common">

	<resultMap id="map" type="java.util.HashMap">
	</resultMap>
	
	<!--///////////////////////////  SQL_CALC_FOUND_ROWS 수행후 전체 행 개수 반환 ///////////////////////////-->
	<select id="getTotalCount" resultType="map">
		SELECT FOUND_ROWS() as total_count
	</select>
	
    <!--///////////////////////////  사용자 관련 ///////////////////////////-->

	<select id="getUser" parameterType="map" resultType="map">
		SELECT 
			a.user_id, a.password, a.user_name, a.birth_date, a.gender, a.email, a.mobile, a.phone, a.post_number, a.address1, a.address2, a.church_officer, a.diocese, a.user_status, DATE_FORMAT(a.regist_date, '%Y-%m-%d') AS regist_date,
			(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = a.church_officer AND cc.parent_code_seq = 'CHURCH_OFFICER') as church_officer_name
		FROM TB_COM_USER a
		WHERE a.user_id = #{userId}
		ORDER BY a.user_id
	</select>
	
	<select id="getRefUserByNameAndBirthDate" parameterType="map" resultType="map">
		SELECT 
			a.user_id, a.user_name, a.birth_date, a.gender, a.email, a.mobile, a.phone, a.post_number, a.address1, a.address2, a.church_officer, a.diocese, 
			(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = a.church_officer AND cc.parent_code_seq = 'CHURCH_OFFICER') as church_officer_name 
		FROM TB_BUNYANG_REF_USER a
		WHERE a.ref_type = #{refType} 
		AND a.user_name = #{userName} 
		AND a.birth_date = #{birthDate} 
		AND a.gender = #{gender}
		AND a.mobile = #{mobile}
		<if test="userId != null and userId != ''">
	  	AND a.user_id != #{userId}
	  	</if>
		LIMIT 0,1
	</select>
	
	<select id="getUserByNameAndBirthDate" parameterType="map" resultType="map">
		SELECT 
			a.user_id, a.password, a.user_name, a.birth_date, a.gender, a.email, a.mobile, a.phone, a.post_number, a.address1, a.address2, a.church_officer, a.diocese, a.user_status, DATE_FORMAT(a.regist_date, '%Y-%m-%d') AS regist_date,
			(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = a.church_officer AND cc.parent_code_seq = 'CHURCH_OFFICER') as church_officer_name 
		FROM TB_COM_USER a
		WHERE a.user_name = #{userName} AND a.birth_date = #{birthDate}
		ORDER BY a.user_id
		LIMIT 0,1
	</select>
	
	<select id="getUserList" parameterType="map" resultType="map">
		SELECT 
			a.user_id, a.password, a.user_name, a.birth_date
			, a.gender, a.email, a.mobile, a.phone, a.post_number, a.address1, a.address2
			, a.church_officer, a.diocese, a.user_status
			, (SELECT code_name FROM TB_COM_CODE b WHERE a.church_officer = b.code_seq) church_officer_name
			, DATE_FORMAT(a.regist_date, '%Y-%m-%d') AS regist_date
		FROM TB_COM_USER a
		WHERE 1=1
		<if test="user_name != null">
		AND user_name like CONCAT('%',#{user_name},'%')
		</if>
		ORDER BY a.user_name, a.user_id
		<if test="start != null">
		LIMIT #{start}, #{count}
		</if>
	</select>
	
	<select id="getUserListTotalCount" parameterType="map" resultType="map">
		SELECT 
			COUNT(*) total_count 
		FROM TB_COM_USER a
		WHERE 1=1
		<if test="user_name != null">
		AND user_name like CONCAT('%',#{user_name},'%')
		</if>
	</select>
	
	<select id="checkDuplicatedUser" parameterType="map" resultType="map">
		SELECT
			COUNT(*) AS cnt
		FROM TB_COM_USER a
		WHERE a.user_name = #{userName} AND a.birth_date = #{birthDate}
	</select>
	
	<select id="checkDuplicatedBunyangUser" parameterType="map" resultType="map">
		SELECT
			COUNT(*) AS cnt
		FROM TB_BUNYANG_REF_USER a
		WHERE a.ref_type = #{refType} 
		AND a.user_name = #{userName} 
		AND a.birth_date = #{birthDate} 
		AND a.gender = #{gender}
		AND a.mobile = #{mobile}
	</select>
	
	<!-- 사용자정보 생성 -->
	<insert id="createUser" parameterType="map">
		INSERT INTO TB_COM_USER( USER_ID,PASSWORD,USER_NAME,BIRTH_DATE,GENDER,EMAIL,MOBILE,PHONE,POST_NUMBER,ADDRESS1,ADDRESS2,CHURCH_OFFICER,DIOCESE,USER_STATUS,REGIST_DATE )
		VALUES(COALESCE(#{userId},(SELECT CONCAT('USER', LPAD(MAX(CAST(replace(USER_ID,'USER','') AS UNSIGNED))+1, 5, '0')) FROM TB_COM_USER)),#{password},#{userName},#{birthDate},#{gender},#{email},#{mobile},#{phone},#{postNumber},#{address1},#{address2},#{churchOfficer},#{diocese}, 'ACTIVE', CURRENT_TIMESTAMP)
	</insert>
	
	
	<!--///////////////////////////  메뉴 관련 ///////////////////////////-->
	
	<!-- 메뉴정보 조회 -->
	<select id="getMenuInfo" parameterType="map" resultType="map">
		SELECT 
			A.menu_seq,
       		A.menu_name,
       		A.menu_url,
       		A.menu_level,
       		A.menu_type,
       		A.display_order,
       		A.parent_menu_seq,
       		A.use_yn
  		FROM TB_COM_MENU A 
  		WHERE A.menu_seq = #{menuSeq}
	</select>
	
	
	<!--///////////////////////////  코드 관련 ///////////////////////////-->
	
	<select id="getChildCodeList" parameterType="String" resultType="map">
		SELECT A.code_seq,
			A.code_name,
			A.code_desc,
	       	A.code_level,
	       	A.parent_code_seq,
	       	A.code_value,
	       	A.code_value1,
	       	A.code_value2,
	       	A.display_order
	  	FROM TB_COM_CODE A
	  	WHERE A.parent_code_seq = #{parentCodeSeq}
	  	ORDER BY A.display_order
	</select>
	
	<select id="getCodeInfo" parameterType="map" resultType="map">
		SELECT A.code_seq,
			A.code_name,
			A.code_desc,
	       	A.code_level,
	       	A.parent_code_seq,
	       	A.code_value,
	       	A.code_value1,
	       	A.code_value2,
	       	A.display_order
	  	FROM TB_COM_CODE A
	  	WHERE A.code_seq = #{codeSeq}
	  	LIMIT 0,1
	</select>
	
	<select id="getRelationCodeList" parameterType="String" resultType="map">
		SELECT A.code_seq,
			A.code_name,
			A.code_desc,
	       	A.gender,
	       	A.couple_seq,
	       	A.direction,
	       	A.display_order
	  	FROM TB_COM_RELATION_CODE A
	  	ORDER BY A.display_order
	</select>
	
	<select id="getRelationCoupleCodeList" parameterType="String" resultType="map">
		SELECT A.couple_seq,
			A.couple_name,
			A.code_seq1,
			A.code_seq2,
            B.code_name code_name1,
	       	B.gender gender1,
	       	B.direction direction1,
            C.code_name code_name2,
	       	C.gender gender2,
	       	C.direction direction2,
	       	A.display_order
	  	FROM TB_COM_RELATION_COUPLE_CODE A
	  	INNER JOIN TB_COM_RELATION_CODE B ON A.code_seq1 = B.code_seq
	  	INNER JOIN TB_COM_RELATION_CODE C ON A.code_seq2 = C.code_seq
	  	ORDER BY A.display_order
	</select>
	
	
	<!--///////////////////////////  파일 관련 ///////////////////////////-->
	
	<select id="getFileSequence" resultType="map">
		SELECT LPAD(NEXTVAL('seq_sys_file_info')::text, 10, '0') AS seq
	</select>
	
	<insert id="createFileInfo" parameterType="map">
		INSERT INTO TB_SYS_FILE_INFO ( file_seq, file_type, file_size, file_path, file_name, real_file_name, update_date )
		VALUES (#{fileSeq} , #{fileType} , #{fileSize} , #{filePath} , #{fileName} , #{realFileName}, CURRENT_TIMESTAMP  )
	</insert>
	
	<select id="getBunyangFileForm" parameterType="String" resultType="map">
		SELECT 
			a.file_seq, a.file_type, a.file_size, a.file_path, a.file_name, a.real_file_name, a.update_date 
		FROM TB_SYS_FILE_INFO a 
		WHERE a.file_seq = (SELECT file_seq FROM TB_BUNYANG_FILE_FORM WHERE file_form_type = #{fileFormType})
	</select>
	
	<select id="getSysFileInfo" parameterType="String" resultType="map">
		SELECT 
			a.file_seq, a.file_type, a.file_size, a.file_path, a.file_name, a.real_file_name, a.update_date 
		FROM TB_SYS_FILE_INFO a 
		WHERE a.file_seq = #{fileSeq}
	</select>
	
	
	<!--///////////////////////////  시퀀스 관련 ///////////////////////////-->
	
	<select id="getSeqNexVal" parameterType="map" resultType="map">
		SELECT COALESCE(seq_num,1) AS seq FROM SEQ_NUMBER a WHERE a.seq_type = #{seqType}
	</select>
	
	<update id="updateSeqNexVal" parameterType="map">
		UPDATE SEQ_NUMBER a
			SET seq_num = COALESCE(seq_num,0)+1
		WHERE a.seq_type = #{seqType}
	</update>
	
	
	<select id="getYearList" parameterType="map" resultType="map">
		SELECT 
			YEAR(CURDATE())- seq as year_val
		FROM seq_0_to_110
	</select>
	
	<!-- 메뉴접속 이력 생성 -->
	<insert id="createMenuAccessLog" parameterType="map">
		INSERT INTO TB_SYS_MENU_ACCESS_LOG ( 
			MENU_ID
			,LOGIN_USER
			,LOGIN_IP
			,ACCESS_TIME
			,DEVICE_TYPE 
		)
		SELECT 
			menu_seq
			,#{loginUser}
			,#{loginIP}
			,CURRENT_TIMESTAMP  
			,#{deviceType}
		FROM TB_COM_MENU a 
		WHERE a.menu_seq = #{menuId}
	</insert>

</mapper>