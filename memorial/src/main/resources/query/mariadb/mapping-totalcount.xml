<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="totalcount">

	<!-- 
	페이징쿼리에서 전체 행수 조회를 위한 쿼리 정의
	SQL_CALC_FOUND_ROWS+FOUND_ROWS 로 가져오던게 갑자기 안돼서 원인을 못찾아 일단 행수 조회를 위한 쿼리를 메인쿼리와 쌍으로 정의함  
	-->
	
	<!-- 해약관리 대상 조회 -->
	<select id="getCancelList" parameterType="map" resultType="map">
		SELECT
			COUNT(1) as total_count
    	FROM
		    (SELECT
			  a.bunyang_seq
			  ,a.bunyang_no
			  ,a.product_type
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = a.product_type AND cc.parent_code_seq = 'PRODUCT_TYPE') product_type_name
			  ,a.couple_type_count
			  ,a.single_type_count
			  ,a.service_charge_type
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = a.service_charge_type AND cc.parent_code_seq = 'SERVICE_CHARGE_TYPE') service_charge_type_name
			  ,a.progress_status
			  ,b.user_id apply_user_id
			  ,b.user_name apply_user_name
			  ,b.birth_date apply_user_birth_date
			  ,b.church_officer apply_user_church_officer
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = b.church_officer AND cc.parent_code_seq = 'CHURCH_OFFICER') apply_user_church_officer_name
			  ,b.diocese apply_user_diocese
			  ,b.relation_type apply_user_relation
			  ,c.user_id agent_user_id
			  ,c.user_name agent_user_name
			  ,c.relation_type agent_user_relation
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = c.relation_type AND cc.parent_code_seq = 'USER_RELATION') agent_user_relation_name
			  ,d.user_id use_user_id
			  ,d.user_name use_user_name
			  ,d.relation_type use_user_relation
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = d.relation_type AND cc.parent_code_seq = 'USER_RELATION') use_user_relation_name
			  ,d.cnt use_user_cnt
			  ,a.regist_user_id
			  ,(SELECT user_name FROM TB_COM_USER cu WHERE cu.user_id = a.regist_user_id) regist_user_name
		      ,DATE_FORMAT(a.regist_date, '%Y-%m-%d') AS regist_date
		      ,(COALESCE(a.couple_type_count,0)*2 + COALESCE(a.single_type_count,0)) * COALESCE((select code_value from TB_COM_CODE where parent_code_seq = 'BUNYANG_TIMES' and code_seq = a.bunyang_times), a.price_per_count) AS total_price
			  ,CASE WHEN progress_status = 'D' THEN 'Y' ELSE 'N' END AS approval_yn
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'A' order by bh.update_date desc limit 1) apply_approval_date
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'B' order by bh.update_date desc limit 1) contract_date
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'C' order by bh.update_date desc limit 1) full_payment_date
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'D' order by bh.update_date desc limit 1) use_approval_date
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'E' order by bh.update_date desc limit 1) cancel_approval_date
			FROM TB_BUNYANG_INFO a INNER JOIN       
			(SELECT
				bunyang_seq
			  	,user_id
				,CASE WHEN user_id IS NULL THEN user_name ELSE (SELECT user_name FROM TB_COM_USER b WHERE a.user_id = b.user_id) END user_name
				,CASE WHEN user_id IS NULL THEN birth_date ELSE (SELECT birth_date FROM TB_COM_USER b WHERE a.user_id = b.user_id) END birth_date
				,CASE WHEN user_id IS NULL THEN NULL ELSE (SELECT church_officer FROM TB_COM_USER b WHERE a.user_id = b.user_id) END church_officer
				,CASE WHEN user_id IS NULL THEN NULL ELSE (SELECT diocese FROM TB_COM_USER b WHERE a.user_id = b.user_id) END diocese
			  	,ref_type
				,relation_type
			FROM TB_BUNYANG_REF_USER a
			WHERE ref_type = 'APPLY_USER'
			) b ON a.bunyang_seq = b.bunyang_seq  
			LEFT OUTER JOIN
			(SELECT
				bunyang_seq
			  	,user_id
				,CASE WHEN user_id IS NULL THEN user_name ELSE (SELECT user_name FROM TB_COM_USER b WHERE a.user_id = b.user_id) END user_name
			  	,ref_type
				,relation_type
			FROM TB_BUNYANG_REF_USER a
			WHERE ref_type = 'AGENT_USER'
			) c ON a.bunyang_seq = c.bunyang_seq
			INNER JOIN
			(SELECT
				*
				,(SELECT COUNT(*) FROM TB_BUNYANG_REF_USER RU WHERE RU.bunyang_seq = t.bunyang_seq and RU.ref_type = 'USE_USER') cnt
			FROM
				(SELECT
					bunyang_seq
				  	,user_id
					,user_name
					,relation_type
					,CASE WHEN @vbunyang_seq = a.bunyang_seq THEN @rownum:=@rownum+1 ELSE @rownum:=1 END rn
                    ,(@vbunyang_seq := a.bunyang_seq) vbunyang_seq
				FROM      
					(SELECT 
						 bunyang_seq
					   	,user_id
					   	,CASE WHEN user_id IS NULL THEN user_name ELSE (SELECT user_name FROM TB_COM_USER b WHERE a.user_id = b.user_id) END user_name
					   	,relation_type 
					FROM TB_BUNYANG_REF_USER a
					WHERE a.ref_type = 'USE_USER'
					) a, (SELECT @vbunyang_seq:='', @rownum:=0 FROM DUAL) b
				ORDER BY bunyang_seq, CASE WHEN relation_type = 'ONESELF' THEN 1 ELSE 2 end, user_name
			  ) t
			  WHERE rn = 1
			) d ON a.bunyang_seq = d.bunyang_seq
			WHERE a.progress_status in ('B','C','D','E')
			) t
		WHERE 1=1
		<if test="apply_user_name != null">
		AND apply_user_name like CONCAT('%',#{apply_user_name},'%')
		</if>
	</select>
	
	<!-- 분양신청리스트 조회 -->
    <select id="getApplyList" parameterType="map" resultType="map">
    	SELECT
    		COUNT(1) as total_count
    	FROM
		    (SELECT
			  a.bunyang_seq
			  ,a.bunyang_no
			  ,a.product_type
			  ,a.cancel_yn
			  ,a.bunyang_times
			  ,(SELECT remarks FROM TB_BUNYANG_HISTORY tbh WHERE tbh.bunyang_seq = a.bunyang_seq and tbh.progress_status = CASE WHEN a.cancel_yn = 'Y' then 'CA' else a.progress_status end order by tbh.update_date desc limit 1) remarks
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY tbh WHERE tbh.bunyang_seq = a.bunyang_seq and tbh.progress_status = CASE WHEN a.cancel_yn = 'Y' then 'CA' else a.progress_status end order by tbh.update_date desc limit 1) progress_update_date
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = a.product_type AND cc.parent_code_seq = 'PRODUCT_TYPE') product_type_name
			  ,a.couple_type_count
			  ,a.single_type_count
			  ,a.service_charge_type
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = a.service_charge_type AND cc.parent_code_seq = 'SERVICE_CHARGE_TYPE') service_charge_type_name
			  ,a.progress_status
			  ,b.user_id apply_user_id
			  ,b.user_name apply_user_name
			  ,b.relation_type apply_user_relation
			  ,c.user_id agent_user_id
			  ,c.user_name agent_user_name
			  ,c.relation_type agent_user_relation
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = c.relation_type AND cc.parent_code_seq = 'USER_RELATION') agent_user_relation_name
			  ,d.user_id use_user_id
			  ,d.user_name use_user_name
			  ,d.relation_type use_user_relation
			  ,is_move
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = d.relation_type AND cc.parent_code_seq = 'USER_RELATION') use_user_relation_name
			  ,d.cnt use_user_cnt
			  ,a.regist_user_id
			  ,(SELECT user_name FROM TB_COM_USER cu WHERE cu.user_id = a.regist_user_id) regist_user_name
		      ,DATE_FORMAT(a.regist_date, '%Y-%m-%d') AS regist_date
			FROM TB_BUNYANG_INFO a INNER JOIN       
			(SELECT
				bunyang_seq
			  	,user_id
				,user_name
			  	,ref_type
				,relation_type
			FROM TB_BUNYANG_REF_USER a
			WHERE ref_type = 'APPLY_USER'
			) b ON a.bunyang_seq = b.bunyang_seq  
			LEFT OUTER JOIN
			(SELECT
				bunyang_seq
			  	,user_id
				,user_name
			  	,ref_type
				,relation_type
			FROM TB_BUNYANG_REF_USER a
			WHERE ref_type = 'AGENT_USER'
			) c ON a.bunyang_seq = c.bunyang_seq
			INNER JOIN
			(SELECT
				*
				,(SELECT COUNT(*) FROM TB_BUNYANG_REF_USER RU WHERE RU.bunyang_seq = t.bunyang_seq and RU.ref_type = 'USE_USER') cnt
			FROM
				(SELECT
					bunyang_seq
				  	,user_id
					,user_name
					,relation_type
					,is_move
					,CASE WHEN @vbunyang_seq = a.bunyang_seq THEN @rownum:=@rownum+1 ELSE @rownum:=1 END rn
                    ,(@vbunyang_seq := a.bunyang_seq) vbunyang_seq
				FROM      
					(SELECT 
						 bunyang_seq
					   	,user_id
					   	,user_name
					   	,relation_type
					   	,is_move 
					FROM TB_BUNYANG_REF_USER a
					WHERE a.ref_type = 'USE_USER'
					) a, (SELECT @vbunyang_seq:='', @rownum:=0 FROM DUAL) b
				ORDER BY bunyang_seq, CASE WHEN relation_type = 'ONESELF' THEN 1 ELSE 2 end, user_name
			  ) t
			  WHERE rn = 1
			) d ON a.bunyang_seq = d.bunyang_seq
			WHERE a.progress_status in ('N', 'A', 'R')
			) t
		WHERE 1=1
		<if test="apply_user_name != null and apply_user_name != ''">
		AND apply_user_name like CONCAT('%',#{apply_user_name},'%')
		</if>
		<if test="progressStatus != null and progressStatus != '' and progressStatus != 'CA'">
		AND progress_status = #{progressStatus} AND (cancel_yn is null or cancel_yn = 'N')
		</if>
		<if test="progressStatus == 'CA'">
		AND cancel_yn = 'Y'
		</if>
		<if test="bunyangTimes != null and bunyangTimes > 0">
		AND bunyang_times = #{bunyangTimes}
		</if>
    </select>
	
	<!-- 사용계약리스트 조회 -->
    <select id="getContractList" parameterType="map" resultType="map">
    	SELECT
    		COUNT(1) as total_count 
    	FROM
		    (SELECT
			  a.bunyang_seq
			  ,a.bunyang_no
			  ,a.bunyang_times
			  ,a.product_type
			  ,a.cancel_yn
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = a.product_type AND cc.parent_code_seq = 'PRODUCT_TYPE') product_type_name
			  ,a.couple_type_count
			  ,a.single_type_count
			  ,a.service_charge_type
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = a.service_charge_type AND cc.parent_code_seq = 'SERVICE_CHARGE_TYPE') service_charge_type_name
			  ,a.progress_status
			  ,b.user_id apply_user_id
			  ,b.user_name apply_user_name
			  ,b.relation_type apply_user_relation
			  ,c.user_id agent_user_id
			  ,c.user_name agent_user_name
			  ,c.relation_type agent_user_relation
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = c.relation_type AND cc.parent_code_seq = 'USER_RELATION') agent_user_relation_name
			  ,d.user_id use_user_id
			  ,d.user_name use_user_name
			  ,d.relation_type use_user_relation
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = d.relation_type AND cc.parent_code_seq = 'USER_RELATION') use_user_relation_name
			  ,d.cnt use_user_cnt
			  ,a.regist_user_id
			  ,(SELECT user_name FROM TB_COM_USER cu WHERE cu.user_id = a.regist_user_id) regist_user_name
		      ,DATE_FORMAT(a.regist_date, '%Y-%m-%d') AS regist_date
		      ,(COALESCE(a.couple_type_count,0)*2 + COALESCE(a.single_type_count,0)) * COALESCE((select code_value from TB_COM_CODE where parent_code_seq = 'BUNYANG_TIMES' and code_seq = a.bunyang_times), a.price_per_count) AS total_price
			  ,(SELECT COALESCE(SUM(payment_amount),0) FROM TB_BUNYANG_PAYMENT_HISTORY ph WHERE ph.bunyang_seq = a.bunyang_seq AND ph.payment_type = 'DOWN_PAYMENT') AS down_payment
              ,(SELECT COALESCE(SUM(payment_amount),0) FROM TB_BUNYANG_PAYMENT_HISTORY ph WHERE ph.bunyang_seq = a.bunyang_seq AND ph.payment_type = 'BALANCE_PAYMENT') AS balance_payment
              ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY tbh WHERE tbh.bunyang_seq = a.bunyang_seq and tbh.progress_status = 'A' order by tbh.update_date desc limit 1) approval_date
              ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY tbh WHERE tbh.bunyang_seq = a.bunyang_seq and tbh.progress_status = 'B' order by tbh.update_date desc limit 1) contract_date
              ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY tbh WHERE tbh.bunyang_seq = a.bunyang_seq and tbh.progress_status = 'C' order by tbh.update_date desc limit 1) fullpayment_date
              ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY tbh WHERE tbh.bunyang_seq = a.bunyang_seq and tbh.progress_status = 'E' order by tbh.update_date desc limit 1) cancel_date
              ,(SELECT DATE_FORMAT(MAX(payment_date), '%Y-%m-%d') FROM TB_BUNYANG_PAYMENT_HISTORY ph WHERE ph.bunyang_seq = a.bunyang_seq AND ph.payment_type = 'DOWN_PAYMENT') AS down_payment_date
			FROM TB_BUNYANG_INFO a INNER JOIN       
			(SELECT
				bunyang_seq
			  	,user_id
				,CASE WHEN user_id IS NULL THEN user_name ELSE (SELECT user_name FROM TB_COM_USER b WHERE a.user_id = b.user_id) END user_name
			  	,ref_type
				,relation_type
			FROM TB_BUNYANG_REF_USER a
			WHERE ref_type = 'APPLY_USER'
			) b ON a.bunyang_seq = b.bunyang_seq  
			LEFT OUTER JOIN
			(SELECT
				bunyang_seq
			  	,user_id
				,CASE WHEN user_id IS NULL THEN user_name ELSE (SELECT user_name FROM TB_COM_USER b WHERE a.user_id = b.user_id) END user_name
			  	,ref_type
				,relation_type
			FROM TB_BUNYANG_REF_USER a
			WHERE ref_type = 'AGENT_USER'
			) c ON a.bunyang_seq = c.bunyang_seq
			INNER JOIN
			(SELECT
				*
				,(SELECT COUNT(*) FROM TB_BUNYANG_REF_USER RU WHERE RU.bunyang_seq = t.bunyang_seq and RU.ref_type = 'USE_USER') cnt
			FROM
				(SELECT
					bunyang_seq
				  	,user_id
					,user_name
					,relation_type
					,CASE WHEN @vbunyang_seq = a.bunyang_seq THEN @rownum:=@rownum+1 ELSE @rownum:=1 END rn
                    ,(@vbunyang_seq := a.bunyang_seq) vbunyang_seq
				FROM      
					(SELECT 
						 bunyang_seq
					   	,user_id
					   	,CASE WHEN user_id IS NULL THEN user_name ELSE (SELECT user_name FROM TB_COM_USER b WHERE a.user_id = b.user_id) END user_name
					   	,relation_type 
					FROM TB_BUNYANG_REF_USER a
					WHERE a.ref_type = 'USE_USER'
					) a, (SELECT @vbunyang_seq:='', @rownum:=0 FROM DUAL) b
				ORDER BY bunyang_seq, CASE WHEN relation_type = 'ONESELF' THEN 1 ELSE 2 end, user_name
			  ) t
			  WHERE rn = 1
			) d ON a.bunyang_seq = d.bunyang_seq
			WHERE a.progress_status in ('A', 'B', 'C', 'E')
			) t
		WHERE (cancel_yn is null or cancel_yn != 'Y')
		<if test="apply_user_name != null and apply_user_name != ''">
		AND apply_user_name like CONCAT('%',#{apply_user_name},'%')
		</if>
		<if test='progressStatus == "A"'>
		AND progress_status = 'A'
		</if>
		<if test='progressStatus == "B"'>
		AND progress_status = 'B'
		</if>
		<if test='progressStatus == "C"'>
		AND progress_status = 'C'
		</if>
		<if test='progressStatus == "E"'>
		AND progress_status = 'E'
		</if>
		<if test='progressStatus == "B0"'>
		<![CDATA[
		AND progress_status = 'A' AND down_payment >= (total_price / 10)
		]]>
		</if>
		<if test="bunyangTimes != null and bunyangTimes > 0">
		AND bunyang_times = #{bunyangTimes}
		</if>
    </select>
    
    <!-- 계약자관리 리스트 조회 -->
    <select id="getContractorList" parameterType="map" resultType="map">
    	SELECT
    		COUNT(1) as total_count
    	FROM
		    (SELECT
			  a.bunyang_seq
			  ,a.bunyang_no
			  ,a.bunyang_times
			  ,a.product_type
			  ,a.cancel_yn
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = a.product_type AND cc.parent_code_seq = 'PRODUCT_TYPE') product_type_name
			  ,a.couple_type_count
			  ,a.single_type_count
			  ,a.service_charge_type
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = a.service_charge_type AND cc.parent_code_seq = 'SERVICE_CHARGE_TYPE') service_charge_type_name
			  ,a.progress_status
			  ,b.user_id apply_user_id
			  ,b.user_name apply_user_name
			  ,b.relation_type apply_user_relation
			  ,c.user_id agent_user_id
			  ,c.user_name agent_user_name
			  ,c.relation_type agent_user_relation
			  ,(SELECT code_name FROM TB_COM_RELATION_CODE cc WHERE cc.code_seq = c.relation_type) agent_user_relation_name
			  ,d.user_id use_user_id
			  ,d.user_name use_user_name
			  ,d.relation_type use_user_relation
			  ,(SELECT code_name FROM TB_COM_RELATION_CODE cc WHERE cc.code_seq = d.relation_type) use_user_relation_name
			  ,d.cnt use_user_cnt
			  ,a.regist_user_id
			  ,(SELECT user_name FROM TB_COM_USER cu WHERE cu.user_id = a.regist_user_id) regist_user_name
		      ,DATE_FORMAT(a.regist_date, '%Y-%m-%d') AS regist_date
		      ,(COALESCE(a.couple_type_count,0)*2 + COALESCE(a.single_type_count,0)) * COALESCE((select code_value from TB_COM_CODE where parent_code_seq = 'BUNYANG_TIMES' and code_seq = a.bunyang_times), a.price_per_count) AS total_price
			  ,(SELECT COALESCE(SUM(payment_amount),0) FROM TB_BUNYANG_PAYMENT_HISTORY ph WHERE ph.bunyang_seq = a.bunyang_seq AND ph.payment_type = 'DOWN_PAYMENT') AS down_payment
              ,(SELECT COALESCE(SUM(payment_amount),0) FROM TB_BUNYANG_PAYMENT_HISTORY ph WHERE ph.bunyang_seq = a.bunyang_seq AND ph.payment_type = 'BALANCE_PAYMENT') AS balance_payment
              ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY tbh WHERE tbh.bunyang_seq = a.bunyang_seq and tbh.progress_status = 'A' order by tbh.update_date desc limit 1) approval_date
              ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY tbh WHERE tbh.bunyang_seq = a.bunyang_seq and tbh.progress_status = 'B' order by tbh.update_date desc limit 1) contract_date
              ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY tbh WHERE tbh.bunyang_seq = a.bunyang_seq and tbh.progress_status = 'C' order by tbh.update_date desc limit 1) fullpayment_date
              ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY tbh WHERE tbh.bunyang_seq = a.bunyang_seq and tbh.progress_status = 'E' order by tbh.update_date desc limit 1) cancel_date
              ,(SELECT DATE_FORMAT(MAX(payment_date), '%Y-%m-%d') FROM TB_BUNYANG_PAYMENT_HISTORY ph WHERE ph.bunyang_seq = a.bunyang_seq AND ph.payment_type = 'DOWN_PAYMENT') AS down_payment_date
			FROM TB_BUNYANG_INFO a INNER JOIN       
			(SELECT
				bunyang_seq
			  	,user_id
				,user_name
			  	,ref_type
				,relation_type
			FROM TB_BUNYANG_REF_USER a
			WHERE ref_type = 'APPLY_USER'
			) b ON a.bunyang_seq = b.bunyang_seq  
			LEFT OUTER JOIN
			(SELECT
				bunyang_seq
			  	,user_id
				,user_name
			  	,ref_type
				,relation_type
			FROM TB_BUNYANG_REF_USER a
			WHERE ref_type = 'AGENT_USER'
			) c ON a.bunyang_seq = c.bunyang_seq
			INNER JOIN
			(SELECT
				*
				,(SELECT COUNT(*) FROM TB_BUNYANG_REF_USER RU WHERE RU.bunyang_seq = t.bunyang_seq and RU.ref_type = 'USE_USER') cnt
			FROM
				(SELECT
					bunyang_seq
				  	,user_id
					,user_name
					,relation_type
					,CASE WHEN @vbunyang_seq = a.bunyang_seq THEN @rownum:=@rownum+1 ELSE @rownum:=1 END rn
                    ,(@vbunyang_seq := a.bunyang_seq) vbunyang_seq
				FROM      
					(SELECT 
						 bunyang_seq
					   	,user_id
					   	,user_name
					   	,relation_type 
					FROM TB_BUNYANG_REF_USER a
					WHERE a.ref_type = 'USE_USER'
					) a, (SELECT @vbunyang_seq:='', @rownum:=0 FROM DUAL) b
				ORDER BY bunyang_seq, CASE WHEN relation_type = 'ONESELF' THEN 1 ELSE 2 end, user_name
			  ) t
			  WHERE rn = 1
			) d ON a.bunyang_seq = d.bunyang_seq
			WHERE a.progress_status in ('A', 'B', 'C', 'E')
			) t
		WHERE (cancel_yn is null or cancel_yn != 'Y')
		<if test="apply_user_name != null and apply_user_name != ''">
		AND apply_user_name like CONCAT('%',#{apply_user_name},'%')
		</if>
		<if test='progressStatus == "A"'>
		<![CDATA[
		AND progress_status = 'A' AND down_payment < (total_price / 10)
		]]>
		</if>
		<if test='progressStatus == "B"'>
		AND progress_status = 'B'
		</if>
		<if test='progressStatus == "C"'>
		AND progress_status = 'C'
		</if>
		<if test='progressStatus == "E"'>
		AND progress_status = 'E'
		</if>
		<if test='progressStatus == "B0"'>
		<![CDATA[
		AND progress_status = 'A' AND down_payment >= (total_price / 10)
		]]>
		</if>
		<if test="bunyangTimes != null and bunyangTimes > 0">
		AND bunyang_times = #{bunyangTimes}
		</if>
    </select>
	
	<!-- 납부내역조회  -->	
	<select id="getPaymentList" parameterType="map" resultType="map">
		SELECT
			COUNT(1) as total_count 
		FROM
		(SELECT
			a.bunyang_seq
		FROM TB_BUNYANG_PAYMENT_HISTORY a LEFT OUTER JOIN TB_BUNYANG_INFO b ON a.bunyang_seq = b.bunyang_seq
		WHERE 1=1
		<if test="bunyangNo != null and bunyangNo != ''">
		AND b.bunyang_no = #{bunyangNo}
		</if>
		<if test="paymentType != null and paymentType != ''">
		AND a.payment_type = #{paymentType}
		</if>
		<if test="paymentDivision != null and paymentDivision != ''">
		AND a.payment_division = #{paymentDivision}
		</if>
		<if test="fromDt != null and fromDt != ''">
		<![CDATA[
		AND payment_date >= STR_TO_DATE(#{fromDt}, '%Y%m%d')
		]]>
		</if>
		<if test="toDt != null and toDt != ''">
		<![CDATA[
		AND payment_date < DATE_ADD(STR_TO_DATE(#{toDt}, '%Y%m%d'), INTERVAL 1 DAY)
		]]>
		</if>
		) t
	</select>
	
	<!-- 사용승인리스트 조회 -->
    <select id="getApprovalList" parameterType="map" resultType="map">
    	SELECT
    		COUNT(1) as total_count
    	FROM
		    (SELECT
			  a.bunyang_seq
			  ,a.bunyang_no
			  ,a.product_type
			  ,a.bunyang_times
			  ,CASE WHEN a.progress_status = 'C' THEN 1 ELSE 2 END as display_order
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = a.product_type AND cc.parent_code_seq = 'PRODUCT_TYPE') product_type_name
			  ,a.couple_type_count
			  ,a.single_type_count
			  ,a.service_charge_type
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = a.service_charge_type AND cc.parent_code_seq = 'SERVICE_CHARGE_TYPE') service_charge_type_name
			  ,a.progress_status
			  ,b.user_id apply_user_id
			  ,b.user_name apply_user_name
			  ,b.relation_type apply_user_relation
			  ,c.user_id agent_user_id
			  ,c.user_name agent_user_name
			  ,c.relation_type agent_user_relation
			  ,(SELECT code_name FROM TB_COM_RELATION_CODE cc WHERE cc.code_seq = c.relation_type) agent_user_relation_name
			  ,d.user_id use_user_id
			  ,d.user_name use_user_name
			  ,d.relation_type use_user_relation
			  ,(SELECT code_name FROM TB_COM_RELATION_CODE cc WHERE cc.code_seq = d.relation_type) use_user_relation_name
			  ,d.cnt use_user_cnt
			  ,a.regist_user_id
			  ,(SELECT user_name FROM TB_COM_USER cu WHERE cu.user_id = a.regist_user_id) regist_user_name
		      ,DATE_FORMAT(a.regist_date, '%Y-%m-%d') AS regist_date
		      ,(COALESCE(a.couple_type_count,0)*2 + COALESCE(a.single_type_count,0)) * COALESCE((select code_value from TB_COM_CODE where parent_code_seq = 'BUNYANG_TIMES' and code_seq = a.bunyang_times), a.price_per_count) AS total_price
			  ,CASE WHEN progress_status = 'D' THEN 'Y' ELSE 'N' END AS approval_yn
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'B' order by bh.update_date desc limit 1) contract_date
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'C' order by bh.update_date desc limit 1) full_payment_date
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'D' order by bh.update_date desc limit 1) use_approval_date
			FROM TB_BUNYANG_INFO a INNER JOIN       
			(SELECT
				bunyang_seq
			  	,user_id
				,user_name
			  	,ref_type
				,relation_type
			FROM TB_BUNYANG_REF_USER a
			WHERE ref_type = 'APPLY_USER'
			) b ON a.bunyang_seq = b.bunyang_seq  
			LEFT OUTER JOIN
			(SELECT
				bunyang_seq
			  	,user_id
				,user_name
			  	,ref_type
				,relation_type
			FROM TB_BUNYANG_REF_USER a
			WHERE ref_type = 'AGENT_USER'
			) c ON a.bunyang_seq = c.bunyang_seq
			INNER JOIN
			(SELECT
				*
				,(SELECT COUNT(*) FROM TB_BUNYANG_REF_USER RU WHERE RU.bunyang_seq = t.bunyang_seq and RU.ref_type = 'USE_USER') cnt
			FROM
				(SELECT
					bunyang_seq
				  	,user_id
					,user_name
					,relation_type
					,CASE WHEN @vbunyang_seq = a.bunyang_seq THEN @rownum:=@rownum+1 ELSE @rownum:=1 END rn
                    ,(@vbunyang_seq := a.bunyang_seq) vbunyang_seq
				FROM      
					(SELECT 
						 bunyang_seq
					   	,user_id
					   	,user_name
					   	,relation_type 
					FROM TB_BUNYANG_REF_USER a
					WHERE a.ref_type = 'USE_USER'
					) a, (SELECT @vbunyang_seq:='', @rownum:=0 FROM DUAL) b
				ORDER BY bunyang_seq, CASE WHEN relation_type = 'ONESELF' THEN 1 ELSE 2 end, user_name
			  ) t
			  WHERE rn = 1
			) d ON a.bunyang_seq = d.bunyang_seq
			WHERE a.progress_status in ('C', 'D')
			) t
		WHERE 1=1
		<if test="apply_user_name != null">
		AND apply_user_name like CONCAT('%',#{apply_user_name},'%')
		</if>
		<if test="bunyangTimes != null and bunyangTimes > 0">
		AND bunyang_times = #{bunyangTimes}
		</if>
		<if test="progressStatus != null and progressStatus != ''">
		AND progress_status = #{progressStatus}
		</if>
    </select>
    
    <!-- 사용계약 리스트 조회 -->
    <select id="getUseChangeList" parameterType="map" resultType="map">
    	SELECT
    		COUNT(1) as total_count 
    	FROM
		    (SELECT
			  a.bunyang_seq
			  ,a.bunyang_no
			  ,a.product_type
			  ,a.bunyang_times
			  ,CASE WHEN a.progress_status = 'C' THEN 1 ELSE 2 END as display_order
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = a.product_type AND cc.parent_code_seq = 'PRODUCT_TYPE') product_type_name
			  ,a.couple_type_count
			  ,a.single_type_count
			  ,a.service_charge_type
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = a.service_charge_type AND cc.parent_code_seq = 'SERVICE_CHARGE_TYPE') service_charge_type_name
			  ,a.progress_status
			  ,b.user_id apply_user_id
			  ,b.user_name apply_user_name
			  ,b.relation_type apply_user_relation
			  ,c.user_id agent_user_id
			  ,c.user_name agent_user_name
			  ,c.relation_type agent_user_relation
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = c.relation_type AND cc.parent_code_seq = 'USER_RELATION') agent_user_relation_name
			  ,d.user_id use_user_id
			  ,d.user_name use_user_name
			  ,d.relation_type use_user_relation
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = d.relation_type AND cc.parent_code_seq = 'USER_RELATION') use_user_relation_name
			  ,d.cnt use_user_cnt
			  ,d.approval_user_cnt
			  ,a.regist_user_id
			  ,(SELECT user_name FROM TB_COM_USER cu WHERE cu.user_id = a.regist_user_id) regist_user_name
		      ,DATE_FORMAT(a.regist_date, '%Y-%m-%d') AS regist_date
		      ,(COALESCE(a.couple_type_count,0)*2 + COALESCE(a.single_type_count,0)) * COALESCE((select code_value from TB_COM_CODE where parent_code_seq = 'BUNYANG_TIMES' and code_seq = a.bunyang_times), a.price_per_count) AS total_price
			  ,CASE WHEN progress_status = 'D' THEN 'Y' ELSE 'N' END AS approval_yn
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'B' order by bh.update_date desc limit 1) contract_date
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'C' order by bh.update_date desc limit 1) full_payment_date
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'D' order by bh.update_date desc limit 1) use_approval_date
			FROM TB_BUNYANG_INFO a INNER JOIN       
			(SELECT
				bunyang_seq
			  	,user_id
				,user_name
			  	,ref_type
				,relation_type
			FROM TB_BUNYANG_REF_USER a
			WHERE ref_type = 'APPLY_USER'
			) b ON a.bunyang_seq = b.bunyang_seq  
			LEFT OUTER JOIN
			(SELECT
				bunyang_seq
			  	,user_id
				,user_name
			  	,ref_type
				,relation_type
			FROM TB_BUNYANG_REF_USER a
			WHERE ref_type = 'AGENT_USER'
			) c ON a.bunyang_seq = c.bunyang_seq
			INNER JOIN
			(SELECT
				*
				,(SELECT COUNT(*) FROM TB_BUNYANG_REF_USER RU WHERE RU.bunyang_seq = t.bunyang_seq and RU.ref_type = 'USE_USER') cnt
				,(SELECT COUNT(*) FROM TB_BUNYANG_REF_USER RU WHERE RU.bunyang_seq = t.bunyang_seq and RU.ref_type = 'USE_USER' and approval_no is not null) approval_user_cnt
			FROM
				(SELECT
					bunyang_seq
				  	,user_id
					,user_name
					,relation_type
					,CASE WHEN @vbunyang_seq = a.bunyang_seq THEN @rownum:=@rownum+1 ELSE @rownum:=1 END rn
                    ,(@vbunyang_seq := a.bunyang_seq) vbunyang_seq
				FROM      
					(SELECT 
						 bunyang_seq
					   	,user_id
					   	,user_name
					   	,relation_type 
					FROM TB_BUNYANG_REF_USER a
					WHERE a.ref_type = 'USE_USER'
					) a, (SELECT @vbunyang_seq:='', @rownum:=0 FROM DUAL) b
				ORDER BY bunyang_seq, CASE WHEN relation_type = 'ONESELF' THEN 1 ELSE 2 end, user_name
			  ) t
			  WHERE rn = 1
			) d ON a.bunyang_seq = d.bunyang_seq
			WHERE a.progress_status in ('C', 'D')
			) t
		WHERE 1=1
		AND approval_user_cnt > 0
		<if test="apply_user_name != null">
		AND apply_user_name like CONCAT('%',#{apply_user_name},'%')
		</if>
		<if test="bunyangTimes != null and bunyangTimes > 0">
		AND bunyang_times = #{bunyangTimes}
		</if>
		<if test="progressStatus != null and progressStatus != ''">
		AND progress_status = #{progressStatus}
		</if>
    </select>
    
    <!-- 분양신청리스트 조회 -->
	<select id="getBunyangList" parameterType="map" resultType="map">
		SELECT
			COUNT(1) as total_count 
    	FROM
		    (SELECT
		      a.bunyang_seq as id
			  ,a.bunyang_seq
			  ,a.bunyang_no
			  ,a.product_type
			  ,a.cancel_yn
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = a.product_type AND cc.parent_code_seq = 'PRODUCT_TYPE') product_type_name
			  ,a.couple_type_count
			  ,a.single_type_count
			  ,a.service_charge_type
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = a.service_charge_type AND cc.parent_code_seq = 'SERVICE_CHARGE_TYPE') service_charge_type_name
			  ,a.progress_status
			  ,b.user_id apply_user_id
			  ,b.user_name apply_user_name
			  ,b.birth_date apply_user_birth_date
			  ,b.church_officer apply_user_church_officer
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = b.church_officer AND cc.parent_code_seq = 'CHURCH_OFFICER') apply_user_church_officer_name
			  ,b.diocese apply_user_diocese
			  ,b.relation_type apply_user_relation
			  ,c.user_id agent_user_id
			  ,c.user_name agent_user_name
			  ,c.relation_type agent_user_relation
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = c.relation_type AND cc.parent_code_seq = 'USER_RELATION') agent_user_relation_name
			  ,d.user_id use_user_id
			  ,d.user_name use_user_name
			  ,d.relation_type use_user_relation
			  ,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = d.relation_type AND cc.parent_code_seq = 'USER_RELATION') use_user_relation_name
			  ,d.cnt use_user_cnt
			  ,a.regist_user_id
			  ,(SELECT user_name FROM TB_COM_USER cu WHERE cu.user_id = a.regist_user_id) regist_user_name
		      ,DATE_FORMAT(a.regist_date, '%Y-%m-%d') AS regist_date
		      ,(COALESCE(a.couple_type_count,0)*2 + COALESCE(a.single_type_count,0)) * COALESCE((select code_value from TB_COM_CODE where parent_code_seq = 'BUNYANG_TIMES' and code_seq = a.bunyang_times), a.price_per_count) AS total_price
		      ,(SELECT COALESCE(SUM(payment_amount),0) FROM TB_BUNYANG_PAYMENT_HISTORY ph WHERE ph.bunyang_seq = a.bunyang_seq AND ph.payment_type = 'DOWN_PAYMENT') AS down_payment
              ,(SELECT COALESCE(SUM(payment_amount),0) FROM TB_BUNYANG_PAYMENT_HISTORY ph WHERE ph.bunyang_seq = a.bunyang_seq AND ph.payment_type = 'BALANCE_PAYMENT') AS balance_payment
			  ,CASE WHEN progress_status = 'D' THEN 'Y' ELSE 'N' END AS approval_yn
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'A' order by bh.update_date desc limit 1) apply_approval_date
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'B' order by bh.update_date desc limit 1) contract_date
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'C' order by bh.update_date desc limit 1) full_payment_date
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'D' order by bh.update_date desc limit 1) use_approval_date
			  ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = a.bunyang_seq and bh.progress_status = 'E' order by bh.update_date desc limit 1) cancel_approval_date
			FROM TB_BUNYANG_INFO a INNER JOIN       
			(SELECT
				bunyang_seq
			  	,user_id
				,user_name
				,birth_date
				,church_officer
				,diocese
			  	,ref_type
				,relation_type
			FROM TB_BUNYANG_REF_USER a
			WHERE ref_type = 'APPLY_USER'
			) b ON a.bunyang_seq = b.bunyang_seq  
			LEFT OUTER JOIN
			(SELECT
				bunyang_seq
			  	,user_id
				,user_name
			  	,ref_type
				,relation_type
			FROM TB_BUNYANG_REF_USER a
			WHERE ref_type = 'AGENT_USER'
			) c ON a.bunyang_seq = c.bunyang_seq
			INNER JOIN
			(SELECT
				*
				,(SELECT COUNT(*) FROM TB_BUNYANG_REF_USER RU WHERE RU.bunyang_seq = t.bunyang_seq and RU.ref_type = 'USE_USER') cnt
			FROM
				(SELECT
					bunyang_seq
				  	,user_id
					,user_name
					,relation_type
					,CASE WHEN @vbunyang_seq = a.bunyang_seq THEN @rownum:=@rownum+1 ELSE @rownum:=1 END rn
                    ,(@vbunyang_seq := a.bunyang_seq) vbunyang_seq
				FROM      
					(SELECT 
						 bunyang_seq
					   	,user_id
					   	,user_name
					   	,relation_type 
					FROM TB_BUNYANG_REF_USER a
					WHERE a.ref_type = 'USE_USER'
					) a, (SELECT @vbunyang_seq:='', @rownum:=0 FROM DUAL) b
				ORDER BY bunyang_seq, CASE WHEN relation_type = 'ONESELF' THEN 1 ELSE 2 end, user_name
			  ) t
			  WHERE rn = 1
			) d ON a.bunyang_seq = d.bunyang_seq
			) t
		WHERE 1=1
		<if test="apply_user_name != null and apply_user_name != ''">
		AND apply_user_name like CONCAT('%',#{apply_user_name},'%')
		</if>
		<if test="bunyang_seq != null and bunyang_seq != ''">
		AND bunyang_seq like CONCAT('%',#{bunyang_seq},'%')
		</if>
		<if test="bunyang_no != null and bunyang_no != ''">
		AND bunyang_no like CONCAT('%',#{bunyang_no},'%')
		</if>
		<if test="searchVal != null and searchVal != ''">
		AND (apply_user_name like CONCAT('%',#{searchVal},'%') OR bunyang_no like CONCAT('%',#{searchVal},'%'))
		</if>
	</select>
	
	<!-- 관리비납부현황조회 -->
    <select id="getMaintPaymentList" parameterType="map" resultType="map">
    	SELECT
    		COUNT(1) as total_count 
    	FROM
    	(SELECT
			t2.bunyang_seq
		    ,t2.bunyang_no
		    ,t3.user_name as apply_user_name
		    ,t1.total_price
		    ,t1.total_payment
			,t1.total_cnt
			,t1.payment_cnt
		    ,t1.not_payment_cnt
		    ,(SELECT DATE_FORMAT(update_date, '%Y-%m-%d') FROM TB_BUNYANG_HISTORY bh WHERE bh.bunyang_seq = t1.bunyang_seq and bh.progress_status = 'D' order by bh.update_date desc limit 1) use_approval_date
		    ,CASE 
        		WHEN t4.cnt > 1 THEN CONCAT(t4.user_name,'(',t4.relation_type_name,')',' 외 ',t4.cnt-1,'명')
          		ELSE  CONCAT(t4.user_name,'(',t4.relation_type_name,')')
        	END use_user_exp
		FROM
		(SELECT
			a.bunyang_seq
		    ,sum(payment_price) total_price
		    ,sum(case when payment_yn = 'Y' then payment_price else 0 end) total_payment
		    ,count(1) total_cnt
		    ,sum(case when payment_yn = 'Y' then 1 else 0 end) payment_cnt
		    ,sum(case when payment_yn = 'N' then 1 else 0 end) not_payment_cnt
		from TB_BUNYANG_MAINT_PAYMENT_INFO a
		where 1=1
		<if test="maintYear != null and maintYear > 0">
		and maint_year = #{maintYear} 
		</if>
		and exists(select 1 from TB_BUNYANG_REF_USER ru where ru.ref_type = 'USE_USER' and ru.bunyang_seq = a.bunyang_seq and ru.user_seq = a.user_seq and ru.cancel_seq is null)
		group by a.bunyang_seq
		) t1 
		inner join TB_BUNYANG_INFO t2 on t1.bunyang_seq = t2.bunyang_seq
		inner join TB_BUNYANG_REF_USER t3 on t1.bunyang_seq = t3.bunyang_seq AND t3.ref_type = 'APPLY_USER'
		inner join
			(SELECT
				*
				,(SELECT COUNT(*) FROM TB_BUNYANG_REF_USER RU WHERE RU.bunyang_seq = t.bunyang_seq and RU.ref_type = 'USE_USER') cnt
				,(SELECT code_name FROM TB_COM_CODE cc WHERE cc.code_seq = t.relation_type AND cc.parent_code_seq = 'USER_RELATION') relation_type_name
			FROM
				(SELECT
					bunyang_seq
				  	,user_id
					,user_name
					,relation_type
					,CASE WHEN @vbunyang_seq = a.bunyang_seq THEN @rownum:=@rownum+1 ELSE @rownum:=1 END rn
                    ,(@vbunyang_seq := a.bunyang_seq) vbunyang_seq
				FROM      
					(SELECT 
						 bunyang_seq
					   	,user_id
					   	,user_name
					   	,relation_type 
					FROM TB_BUNYANG_REF_USER a
					WHERE a.ref_type = 'USE_USER'
					AND a.cancel_seq is null
					) a, (SELECT @vbunyang_seq:='', @rownum:=0 FROM DUAL) b
				ORDER BY bunyang_seq, CASE WHEN relation_type = 'ONESELF' THEN 1 ELSE 2 end, user_name
			  ) t
			  WHERE rn = 1
			) t4 ON t1.bunyang_seq = t4.bunyang_seq
		) t
		WHERE 1=1
		<if test="apply_user_name != null and apply_user_name != ''">
		AND apply_user_name like CONCAT('%',#{apply_user_name},'%')
		</if>
		<if test='maintStatus == "1"'>
		AND payment_cnt = total_cnt
		</if>
		<if test='maintStatus == "2"'>
		AND payment_cnt = 0
		</if>
		<if test='maintStatus == "3"'>
		<![CDATA[
		AND payment_cnt > 0 AND not_payment_cnt > 0
		]]>
		</if>
    </select>
    
    <!-- 관리비 납부/미납 상세정보 조회 -->
    <select id="getMaintPaymentDetailList" parameterType="map" resultType="map">
    	SELECT
			COUNT(1) as total_count 
		FROM TB_BUNYANG_MAINT_PAYMENT_INFO t1 
		INNER JOIN TB_BUNYANG_REF_USER t2 ON t1.bunyang_seq = t2.bunyang_seq AND t1.user_seq = t2.user_seq AND t2.ref_type = 'USE_USER'
		INNER JOIN TB_BUNYANG_REF_USER t3 ON t1.bunyang_seq = t3.bunyang_seq AND t3.ref_type = 'APPLY_USER'
		INNER JOIN TB_BUNYANG_INFO t4 ON t1.bunyang_seq = t4.bunyang_seq
		WHERE 1=1
		and exists(select 1 from TB_BUNYANG_REF_USER ru where ru.ref_type = 'USE_USER' and ru.bunyang_seq = t1.bunyang_seq and ru.user_seq = t1.user_seq and ru.cancel_seq is null)
		and t4.progress_status not in ('E', 'R') AND (t4.cancel_yn is null or t4.cancel_yn != 'Y')
		<if test="bunyangSeq != null and bunyangSeq != ''">
		AND t1.bunyang_seq = #{bunyangSeq}
		</if>
		<if test="maintYear != null and maintYear > 0">
		AND t1.maint_year = #{maintYear} 
		</if>
		AND t1.payment_yn = #{paymentYn}
    </select>
    
    <!-- 관리비 납부대상 리스트 조회 -->
    <select id="getUnpaidMaintPaymentList" parameterType="map" resultType="map">
    	SELECT
    		count(1) as total_count
    	FROM
	    	(SELECT
	        	bunyang_seq
	        	,bunyang_no
	        	,(select user_name from TB_BUNYANG_REF_USER ru WHERE ru.bunyang_seq = t.bunyang_seq AND ru.ref_type = 'APPLY_USER') as apply_user_name
	        	,service_charge_type
	        	,(select code_name from TB_COM_CODE cc WHERE cc.parent_code_seq = 'SERVICE_CHARGE_TYPE' AND cc.code_seq = t.service_charge_type) as service_charge_type_name
	        	,user_id as charger_id
	        	,user_name as charger_name
	        	,mobile as charger_phone
	        	,address as charger_address
	            ,sum(payment_price) as total_unpaid_price
	            ,count(1) as total_unpaid_cnt
	 		FROM
	        (SELECT
	        	t1.bunyang_seq
				,t1.bunyang_no
	            ,t1.service_charge_type
	            ,t2.payment_price
	            ,t3.user_id
	            ,t3.user_name
				,t3.mobile
	            ,concat('(', t3.post_number, ')', t3.address1, coalesce(t3.address2, '')) address
			FROM TB_BUNYANG_INFO t1 INNER JOIN TB_BUNYANG_MAINT_PAYMENT_INFO t2 ON t1.bunyang_seq = t2.bunyang_seq
	        INNER JOIN TB_BUNYANG_REF_USER t3 ON t1.bunyang_seq = t3.bunyang_seq
	        WHERE t2.payment_yn = 'N' AND t1.service_charge_type = 'APPLY_USER' AND t3.ref_type = 'APPLY_USER'
	        UNION ALL
			SELECT
	        	t1.bunyang_seq
				,t1.bunyang_no
	            ,t1.service_charge_type
	            ,t2.payment_price
	            ,t3.user_id
	            ,t3.user_name
				,t3.mobile
	            ,concat('(', t3.post_number, ')', t3.address1, coalesce(t3.address2, '')) address
			FROM TB_BUNYANG_INFO t1 INNER JOIN TB_BUNYANG_MAINT_PAYMENT_INFO t2 ON t1.bunyang_seq = t2.bunyang_seq
	        INNER JOIN TB_BUNYANG_REF_USER t3 ON t1.bunyang_seq = t3.bunyang_seq AND t2.user_seq = t3.user_seq
	        WHERE t2.payment_yn = 'N' AND t1.service_charge_type = 'USE_USER' AND t3.ref_type = 'USE_USER'
	        UNION ALL
			SELECT
	        	t1.bunyang_seq
				,t1.bunyang_no
	            ,t1.service_charge_type
	            ,t2.payment_price
	            ,t3.user_id
	            ,t3.user_name
				,t3.mobile
	            ,concat('(', t3.post_number, ')', t3.address1, coalesce(t3.address2, '')) address
			FROM TB_BUNYANG_INFO t1 INNER JOIN TB_BUNYANG_MAINT_PAYMENT_INFO t2 ON t1.bunyang_seq = t2.bunyang_seq
	        INNER JOIN TB_BUNYANG_REF_USER t3 ON t1.bunyang_seq = t3.bunyang_seq
	        WHERE t2.payment_yn = 'N' AND t1.service_charge_type = 'REPRESENT' AND t3.ref_type = 'USE_USER' AND t3.is_maint_charger = 'Y'
	        ) t
	        GROUP BY bunyang_seq, bunyang_no, service_charge_type, user_id, user_name, mobile, address
        ) t
    </select>
    
    <!-- 메뉴사용이력 조회 -->
	<select id="getMenuLogList" parameterType="map" resultType="map">
		select
			COUNT(1) as total_count 
		from TB_SYS_MENU_ACCESS_LOG t1 INNER JOIN TB_COM_MENU t2 ON t1.menu_id = t2.menu_seq
		where 1=1
		<if test="deviceType != null and deviceType != ''">
		AND t1.device_type = #{deviceType}
		</if>
		<if test="fromDt != null and fromDt != ''">
		<![CDATA[
		AND access_time >= STR_TO_DATE(#{fromDt}, '%Y%m%d')
		]]>
		</if>
		<if test="toDt != null and toDt != ''">
		<![CDATA[
		AND access_time < DATE_ADD(STR_TO_DATE(#{toDt}, '%Y%m%d'), INTERVAL 1 DAY)
		]]>
		</if>
	</select>
	
	<!-- Admin 사용자 조회 -->
	<select id="getAdminUserList" parameterType="map" resultType="map">
		select 
			COUNT(1) as total_count
	  	from TB_COM_USER a
		where 1=1
		<if test="userName != null and userName != ''">
		AND a.user_name like CONCAT('%',#{userName},'%')
		</if>
		<if test="userStatus != null and userStatus != ''">
		AND a.user_status = #{userStatus}
		</if>
	</select>
	
	<select id="getGraveRequestList" parameterType="map" resultType="map">
    	 SELECT
        	count(1) as total_count
        FROM TB_BUNYANG_GRAVE_REQUEST_INFO a INNER JOIN TB_BUNYANG_INFO b on a.BUNYANG_SEQ = b.BUNYANG_SEQ
        INNER JOIN TB_BUNYANG_REF_USER c on c.BUNYANG_SEQ = a.BUNYANG_SEQ and c.user_seq = a.use_user_seq and c.ref_type = 'USE_USER'
        INNER JOIN TB_BUNYANG_GRAVE_ASSIGN d on a.SECTION_SEQ = d.SECTION_SEQ and a.ROW_SEQ = d.ROW_SEQ and a.COL_SEQ = d.COL_SEQ
        LEFT OUTER JOIN TB_BUNYANG_GRAVE_ASSIGN e on a.BUNYANG_SEQ = e.BUNYANG_SEQ AND ((a.USE_USER_SEQ = e.USE_USER_SEQ1 AND e.assign_date1 is not null) or (a.USE_USER_SEQ = e.USE_USER_SEQ2 AND e.assign_date2 is not null))
    </select>
	
</mapper>